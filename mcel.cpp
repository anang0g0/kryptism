// 16b.cpp : �R���\�[�� �A�v���P�[�V�����̃G���g�� �|�C���g�����`���܂��B
//


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "seed.c"


#define N 16
#define K 8
#define T 5
#define W 9

unsigned int h3[K][N],H[K][N-1];
unsigned char gf[N]={0,1,2,4,8,9,11,15,7,14,5,10,13,3,6,12};
unsigned char fg[N]={0,1,2,13,3,10,14,8,4,5,11,6,15,12,9,7};
//nsigned char gf[64]={0,1,2,4,8,16,32,33,35,39,47,63,31,62,29,58,21,42,53,11,22,44,57,19,38,45,59,23,46,61,27,54,13,26,52,9,18,36,41,51,7,14,28,56,17,34,37,43,55,15,30,60,25,50,5,10,20,40,49,3,6,12,24,48};
//unsigned char fg[64]={0,1,2,59,3,54,60,40,4,35,55,19,61,32,41,49,5,44,36,23,56,16,20,27,62,52,33,30,42,14,50,12,6,7,45,8,37,46,24,9,57,38,17,47,21,25,28,10,63,58,53,39,34,18,31,48,43,22,15,26,51,29,13,11};
//unsigned char gf[N]={0,1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142};
//unsigned char fg[N]={0,1,2,26,3,51,27,199,4,224,52,239,28,105,200,76,5,101,225,15,53,142,240,130,29,194,106,249,201,9,77,114,6,139,102,48,226,37,16,34,54,148,143,219,241,19,131,70,30,182,195,126,107,40,250,186,202,155,10,121,78,229,115,167,7,192,140,99,103,222,49,254,227,153,38,180,17,146,35,137,55,209,149,207,144,151,220,190,242,211,20,93,132,57,71,65,31,67,183,164,196,73,127,111,108,59,41,85,251,134,187,62,203,95,156,160,11,22,122,44,79,213,230,173,116,244,168,88,8,113,193,248,141,129,100,14,104,75,223,238,50,198,255,25,228,166,154,120,39,185,181,125,18,69,147,218,36,33,138,47,56,64,210,92,150,189,208,206,145,136,152,179,221,253,191,98,243,87,212,172,21,43,94,159,133,61,58,84,72,110,66,163,32,46,68,217,184,124,165,119,197,24,74,237,128,13,112,247,109,162,60,83,42,158,86,171,252,97,135,178,188,205,63,91,204,90,96,177,157,170,161,82,12,246,23,236,123,118,45,216,80,175,214,234,231,232,174,233,117,215,245,235,169,81,89,176};
//unsigned char g[K+1]={1,0,0,0,1,0,1};;
unsigned char mat[K][N]={0};
//unsigned char s[K]={4,12,7,8,11,13}; //{5,1,7,4,6,15,6,15,11,11,12,13,56,46,17,51,19,6,9,23}; //,49,20,27,10};

//
//={1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1};
//={1,0,1,0,0,0,0,0,234,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123};
//={1,2,3,9,11,13,11};
//={1,0,0,1,0,0,1};
//={1,142,133,139,191,130,131};
//={1,150,234,161,82,133,228,233,21,250,51,213,9,53,9,237,103,165,29,233,153,201,180,79,122,25,83,203,204,211,102,149,123};
//={130, 160, 130, 193, 130, 211, 130, 241, 130, 160, 130, 169, 130, 241, 130, 196};
unsigned char f[N]={131, 94, 131, 129, 131, 84, 131, 140, 131, 139, 131, 95, 131, 67, 131, 96};
unsigned char sk2[32]={165,72,178,71,238,147,17,129,241,17,145,3,130,28,181,38,114,46,57,170,141,197,248,98,109,96,33,134,241,209,142,1};
unsigned char sk3[32]={50, 102, 193, 99, 184, 4, 160, 33, 31, 140, 62, 200, 171, 79, 168, 254, 62, 72, 42, 110, 67, 91, 122, 12, 17, 37, 22, 81, 4, 131, 145, 243};
unsigned char FG[K][N]={0};
int q[K+1][K]={0};
unsigned char ss[K]={4,12,7,8,11,13};
unsigned char tmp[K][N]={0},G3[K][N]={0};
int r[K+1]={0};
//unsigned char g[K+1]; //={1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}; //{1,1,1,0,0,0,1,0,1};
unsigned int v[N]={1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0},temp[4]={0};


//extern void genkey(char str[16]);


int h1[32][256]={
{161,215,114,66,78,121,65,12,14,180,57,32,103,154,22,29,203,90,5,167,151,207,225,235,23,238,86,179,83,110,217,174,46,123,251,170,122,246,143,1,98,34,51,200,37,220,233,147,20,166,231,212,228,3,60,188,236,27,200,161,230,85,158,43,59,39,54,245,84,68,63,227,233,137,170,85,210,227,155,207,156,111,129,88,10,244,25,71,218,42,42,255,118,75,137,49,247,61,181,102,73,37,53,106,190,98,171,132,22,225,228,208,25,40,245,134,161,65,147,191,143,127,104,218,80,178,126,168,190,12,123,133,163,149,72,194,93,206,175,255,44,152,63,1,175,179,197,150,149,21,209,28,136,255,243,113,35,119,219,125,255,13,93,142,144,191,121,242,236,3,209,1,247,39,56,241,146,4,190,59,62,54,153,49,98,125,223,133,181,108,166,20,18,117,10,226,4,29,251,100,38,160,123,219,49,136,201,226,203,12,3,5,147,84,39,30,17,251,167,208,185,196,179,56,181,3,217,30,203,198,69,154,198,152,172,213,87,219,49,212,130,10,200,233,189,97,70,191,206,228,82,34,198,200,123,11},
{0,215,228,198,37,128,155,36,112,125,167,125,158,108,196,187,44,147,90,86,227,184,202,189,213,139,47,198,170,50,123,70,169,160,253,7,14,162,53,39,235,27,205,115,117,167,59,165,231,109,180,63,128,95,188,2,153,41,167,196,139,197,216,23,102,18,109,137,233,153,249,241,195,72,165,137,15,97,216,204,225,19,32,130,50,51,213,220,59,175,209,205,173,235,168,233,128,53,18,78,91,208,145,85,123,44,43,18,251,138,127,229,132,41,92,8,202,121,44,167,68,238,231,10,229,14,240,245,101,66,189,59,245,186,94,253,115,55,95,213,78,249,145,143,47,231,117,238,138,94,177,47,59,125,151,93,211,15,210,78,244,126,116,223,118,226,198,99,232,230,186,171,141,96,79,76,132,254,117,37,218,37,209,107,210,70,41,178,31,13,152,249,1,97,199,93,55,92,84,105,178,120,233,183,40,124,218,177,225,165,107,184,230,193,199,207,217,15,107,96,131,184,243,37,233,62,65,173,158,120,102,144,255,128,176,158,93,53,36,2,76,36,57,9,107,181,69,66,144,124,158,253,60,117,32,183},
{0,215,213,87,148,186,125,252,167,178,2,72,198,134,204,183,250,86,125,243,61,45,186,11,55,255,241,213,217,112,27,209,132,25,49,233,229,233,80,97,39,132,57,236,64,9,108,4,103,210,249,37,31,136,190,110,19,159,249,70,210,217,103,106,184,230,152,123,91,78,128,123,220,197,36,71,163,178,96,29,84,138,146,84,211,180,118,118,52,20,150,13,133,37,249,80,74,26,170,141,157,150,37,32,143,119,8,40,122,17,45,244,127,88,192,191,187,243,52,27,150,2,160,9,48,220,207,161,240,216,159,129,248,55,229,182,128,16,192,66,187,228,198,70,212,207,241,99,32,142,232,25,158,93,38,45,237,104,200,253,96,244,86,49,38,24,248,31,114,106,81,34,191,12,188,31,204,241,247,166,57,120,142,176,65,208,221,53,149,242,211,118,192,206,55,152,31,142,20,227,73,34,161,66,150,204,233,60,141,113,84,249,56,112,224,209,91,179,43,166,75,231,106,102,25,224,192,246,148,131,192,40,110,173,58,237,171,228,19,195,226,168,129,56,210,45,66,248,254,137,102,210,233,34,182,120},
{0,215,183,249,106,104,19,206,81,75,20,162,65,224,188,243,27,95,121,131,3,115,212,129,242,31,143,85,212,89,47,90,77,30,12,74,66,6,47,134,177,157,212,214,207,88,51,188,66,44,146,209,86,42,210,248,239,28,9,252,79,47,18,83,33,217,228,38,50,1,160,215,183,180,128,219,104,34,95,168,141,255,159,113,36,215,214,160,91,128,14,200,16,91,48,199,194,179,120,26,144,173,191,124,92,34,119,158,18,243,221,37,78,253,110,97,182,142,144,37,8,242,48,132,168,255,183,85,177,208,11,13,2,105,135,52,103,120,71,118,184,67,99,101,135,228,101,12,119,196,65,222,57,151,209,235,73,66,120,102,214,148,246,152,198,195,153,161,238,255,13,143,204,143,64,89,62,32,165,197,241,59,91,77,153,252,64,236,1,194,41,24,222,228,173,243,212,236,195,53,182,151,79,59,20,66,34,153,5,1,112,212,176,13,39,30,254,205,175,23,206,96,68,195,21,74,102,113,50,209,65,218,141,176,192,175,193,45,105,227,241,161,94,75,78,54,186,182,221,39,124,148,183,49,49,71},
{0,215,115,22,181,213,106,80,178,41,136,130,43,20,38,40,173,198,49,64,60,193,3,88,88,10,23,84,88,43,77,184,85,249,133,107,189,222,107,184,66,75,196,70,245,16,1,132,252,63,91,192,94,49,40,159,209,134,247,39,242,181,187,237,168,157,106,31,212,69,136,252,23,123,238,34,197,207,67,3,216,133,50,193,31,190,140,250,120,155,43,39,169,82,134,98,175,139,32,135,126,47,39,36,11,115,187,69,86,206,169,175,203,241,177,36,136,180,182,240,231,215,8,186,16,99,94,139,182,172,255,217,21,110,129,147,242,73,172,136,49,106,191,217,44,97,36,154,231,129,248,110,179,130,20,141,220,179,239,123,132,34,204,208,105,164,180,135,165,160,1,112,91,117,200,20,34,163,168,53,50,191,55,70,28,61,161,167,188,227,121,174,182,56,95,50,18,233,51,213,78,41,162,34,75,170,121,210,183,209,64,197,24,64,199,207,107,208,245,10,119,251,198,10,225,102,69,38,226,15,217,239,81,247,40,60,126,169,68,79,71,139,24,213,58,36,244,94,190,131,13,152,188,64,19,246},
{0,215,230,58,238,166,97,173,249,124,57,255,233,228,249,133,2,58,85,180,23,110,58,124,19,250,251,79,110,72,69,233,114,175,122,92,240,67,134,145,130,188,94,232,195,234,46,162,141,91,192,228,227,172,35,245,104,71,88,146,156,38,141,24,85,9,75,178,84,220,170,63,17,47,231,3,66,79,184,209,5,231,127,216,2,239,135,171,95,123,139,51,232,221,229,207,204,70,220,227,104,21,115,253,223,155,197,5,249,250,97,183,196,135,88,23,31,212,249,236,115,204,247,122,147,170,139,47,17,60,129,254,6,210,178,184,111,72,220,214,244,139,209,59,121,245,197,116,147,212,212,160,165,32,7,115,138,224,175,43,100,198,231,14,166,211,144,43,60,174,170,51,186,45,92,164,254,219,17,89,249,221,201,83,60,39,59,39,42,96,234,175,151,207,92,114,73,31,78,180,244,215,12,211,10,99,153,5,232,194,190,167,47,99,224,209,253,221,103,61,244,196,72,21,74,239,111,65,216,250,2,212,86,138,15,186,78,173,154,217,60,228,88,169,22,56,82,35,49,83,182,216,22,177,68,182},
{0,215,209,78,159,4,91,100,155,187,167,183,152,32,183,224,32,189,147,78,49,101,27,250,181,98,107,23,92,251,181,136,230,235,15,171,140,218,62,7,233,43,121,122,56,106,32,201,72,45,36,6,12,16,212,209,40,73,108,45,129,125,93,50,228,115,161,80,233,146,14,198,188,69,199,221,114,6,63,181,13,78,235,112,168,103,247,129,5,204,2,155,42,32,22,160,213,62,62,107,35,242,96,174,141,180,99,218,162,236,173,86,46,104,21,39,197,222,253,145,139,107,83,154,251,66,164,228,104,87,140,253,63,220,160,77,198,193,57,194,143,75,230,168,149,21,117,23,213,36,69,75,167,202,225,118,4,235,251,58,108,144,156,156,34,38,75,252,69,94,35,70,234,38,97,207,15,29,93,102,251,207,248,189,162,182,219,248,242,66,127,16,114,37,7,248,253,203,7,33,179,25,17,161,171,255,75,212,147,61,151,157,103,190,39,30,30,193,250,85,191,184,39,245,44,140,228,129,73,183,209,236,244,121,175,74,228,62,174,93,228,15,14,31,249,219,97,143,181,145,211,244,73,63,174,135},
{0,215,191,210,70,20,199,33,172,10,2,21,238,189,68,201,58,162,254,70,243,242,247,199,94,59,87,236,30,176,199,195,145,199,227,36,90,215,23,245,119,103,134,130,110,105,169,91,1,14,198,170,109,119,156,163,142,10,16,33,87,195,215,26,191,226,112,73,91,147,131,191,181,199,114,133,179,179,28,171,183,176,133,146,157,32,200,159,37,211,180,80,45,111,80,147,220,150,212,131,176,96,228,193,140,120,224,43,221,1,196,3,60,56,212,130,109,187,56,81,185,212,150,161,113,204,111,125,62,159,88,101,10,185,57,183,205,147,118,140,202,118,115,252,228,10,241,27,100,57,154,70,138,21,235,187,74,205,248,160,5,156,250,102,108,224,92,199,103,167,7,72,176,205,2,254,222,113,205,181,142,39,162,205,177,146,251,14,48,27,73,63,110,231,116,60,29,13,104,2,129,195,246,238,5,220,156,157,144,218,196,62,170,138,199,207,101,21,197,101,113,231,226,97,165,33,216,39,40,101,97,224,88,112,147,152,201,245,251,76,235,54,213,163,87,146,22,2,183,151,188,162,190,207,201,165},
{0,215,99,107,5,68,168,231,9,90,20,151,188,242,159,67,135,80,186,222,96,134,195,131,67,105,53,124,117,108,50,137,215,2,234,152,250,83,168,58,217,4,88,114,179,30,116,209,48,51,136,117,22,211,48,117,28,167,135,8,232,87,48,76,252,192,177,108,50,214,106,230,135,38,130,20,220,111,251,210,121,100,117,13,255,114,230,235,234,74,53,154,164,237,151,196,155,207,9,114,98,68,12,114,228,79,125,35,14,109,62,177,143,106,200,217,84,13,194,216,33,71,57,235,162,124,61,15,118,183,171,95,65,165,71,179,124,25,254,192,236,161,183,130,133,195,101,129,243,187,188,123,22,162,102,193,101,238,71,34,26,67,7,155,168,79,187,153,142,214,113,164,166,58,65,55,140,150,9,242,90,15,35,215,43,242,37,12,17,68,155,202,155,102,60,148,65,144,76,147,40,22,207,3,219,14,154,201,253,106,176,200,130,151,224,209,153,139,4,54,6,96,213,228,79,144,163,162,162,88,72,48,173,130,21,173,77,182,201,245,210,252,124,47,198,23,213,243,90,187,185,165,243,188,206,208},
{0,215,198,189,20,73,215,143,72,176,136,104,67,222,233,246,152,57,6,30,211,44,28,118,102,216,168,208,69,8,38,220,255,66,197,95,249,176,115,181,164,164,133,199,228,113,132,244,105,10,181,154,223,118,201,83,154,13,234,197,254,191,84,98,241,138,36,182,212,10,254,183,22,126,122,245,224,83,135,100,232,82,229,160,161,5,151,229,29,131,105,11,3,246,50,131,131,186,85,161,236,241,146,116,29,50,24,92,50,232,193,41,72,218,217,1,146,51,165,53,195,89,133,73,47,136,132,191,133,38,124,93,30,111,175,149,43,205,160,135,179,32,213,195,17,102,36,245,76,205,216,212,2,234,152,128,104,30,169,41,230,209,73,40,148,47,156,45,84,172,233,101,123,64,102,12,37,232,75,23,53,237,132,202,226,45,182,103,179,178,12,235,27,179,168,142,147,226,150,139,54,128,95,64,140,178,4,19,165,56,159,201,243,6,39,30,95,120,79,179,242,251,86,207,107,111,110,46,103,114,92,103,29,98,99,247,205,89,194,65,33,127,202,35,66,26,15,89,169,181,140,126,154,170,14,24},
{0,215,145,218,80,112,200,138,122,89,57,223,51,63,87,27,117,142,108,223,218,102,149,108,57,87,54,34,63,232,163,193,150,234,18,206,149,201,241,15,112,212,38,231,21,129,38,238,127,247,203,76,200,230,152,79,91,8,192,125,145,169,4,182,150,183,189,65,84,152,79,228,89,95,232,114,86,217,35,30,190,34,222,64,83,28,254,136,54,112,60,15,228,122,58,93,234,197,60,72,222,207,143,59,124,173,153,239,87,168,245,81,246,61,216,115,99,154,80,211,53,126,68,47,149,163,20,54,169,204,20,70,195,87,200,141,97,177,234,108,172,112,228,44,101,37,197,226,80,200,227,145,45,223,99,18,42,208,152,25,239,18,52,168,220,4,176,9,157,17,21,108,158,8,111,151,201,175,169,193,210,115,243,245,144,120,85,25,176,190,91,42,143,195,178,239,35,43,225,17,174,96,158,176,227,9,31,32,212,104,26,26,90,196,199,207,185,241,38,182,77,196,6,231,157,85,6,10,232,47,37,65,90,123,55,121,218,101,206,170,155,64,192,3,62,231,27,220,216,2,148,154,210,245,157,224},
{0,215,63,115,93,173,138,145,247,171,167,202,73,38,109,153,3,134,86,13,110,205,252,151,98,204,134,113,206,90,126,183,55,230,94,183,57,210,87,208,1,165,213,238,102,46,77,31,248,183,255,21,35,14,232,97,148,213,106,208,176,208,248,16,110,113,27,78,233,11,149,57,49,195,70,240,235,88,231,121,147,80,89,121,113,226,20,74,235,213,217,126,157,96,240,59,20,87,16,218,4,161,85,244,138,160,208,238,149,234,191,19,59,194,170,161,246,126,255,51,237,151,30,88,238,240,86,231,42,22,250,106,34,222,106,89,229,230,250,247,19,168,114,58,238,56,117,249,91,51,34,78,156,183,80,110,219,132,57,22,38,157,185,235,231,174,50,246,227,235,74,246,68,1,216,69,116,196,163,195,240,56,188,218,13,33,166,117,105,241,213,140,160,64,201,227,244,177,71,43,92,40,89,9,70,235,18,216,164,135,198,220,185,214,224,209,93,38,164,38,60,184,254,179,235,22,118,144,126,11,200,152,96,191,166,130,2,87,114,206,212,150,250,8,225,186,63,198,129,239,12,51,144,93,59,197},
{0,215,126,149,105,35,27,208,235,154,2,93,75,147,60,84,48,14,165,199,11,146,73,71,89,190,221,127,93,12,125,76,174,119,179,167,151,226,221,21,40,253,238,128,206,82,180,98,77,107,62,232,146,11,32,216,22,93,140,61,95,231,244,215,130,96,184,184,91,221,247,73,73,31,214,8,216,92,124,182,246,128,136,99,139,233,76,72,69,129,124,16,99,177,164,149,211,1,110,181,141,169,117,214,137,31,82,133,75,114,182,15,194,209,10,138,196,165,212,252,100,231,5,183,115,194,92,252,164,217,49,157,88,174,66,9,152,251,178,249,161,177,57,39,76,206,241,120,46,80,6,183,20,72,28,82,121,123,37,96,94,226,19,188,244,197,154,197,190,124,165,217,194,173,110,161,173,19,35,184,134,125,198,74,203,7,58,13,23,24,138,178,177,10,223,158,183,162,191,231,101,30,24,221,255,131,253,176,4,241,9,19,34,176,39,30,20,206,24,130,58,231,85,64,196,202,195,82,153,73,34,67,212,73,122,123,197,10,14,188,59,134,112,203,95,39,107,21,61,241,76,13,132,79,81,119},
{0,215,252,162,185,175,90,10,11,62,20,53,83,9,117,43,39,238,213,184,156,53,79,204,11,8,80,253,2,156,95,23,100,49,152,173,113,92,86,241,52,144,110,36,217,63,85,216,241,116,40,79,16,234,142,49,55,89,105,182,21,80,225,231,7,69,76,244,50,215,3,85,197,116,236,98,205,117,164,122,144,239,216,62,51,132,235,230,166,194,218,217,53,42,86,27,129,97,31,167,158,166,41,100,49,179,165,121,241,39,143,79,19,1,83,102,25,162,191,178,45,148,143,15,90,160,119,1,228,81,199,143,102,161,11,203,59,40,171,200,129,24,146,186,125,117,101,141,252,11,83,12,47,53,163,103,131,221,246,30,51,183,9,191,151,93,67,202,162,108,107,90,157,54,118,230,22,17,8,70,147,96,4,100,31,8,97,220,28,158,157,199,237,217,213,67,177,60,188,14,135,134,34,55,35,16,65,243,103,253,12,217,42,168,199,207,70,166,191,62,200,96,121,217,92,191,93,47,18,97,64,75,20,42,216,73,233,252,125,192,14,45,230,249,53,58,4,199,225,109,32,187,40,195,212,43},
{0,215,229,251,222,41,193,54,88,211,136,234,243,101,172,148,74,168,102,154,127,150,59,2,232,200,115,202,56,119,132,176,28,95,199,238,95,126,251,166,115,147,202,165,231,149,3,190,224,65,131,64,103,111,27,206,92,189,194,242,43,12,224,131,221,213,114,202,212,79,202,82,113,191,115,52,24,63,196,103,6,252,168,190,135,156,14,113,25,234,146,165,215,7,78,186,42,184,106,31,60,143,45,5,39,122,61,212,229,63,89,141,195,113,52,96,224,244,24,142,217,108,71,131,218,119,89,127,99,190,160,76,232,65,211,54,9,204,77,171,209,36,73,231,239,110,36,111,83,126,92,170,177,104,139,101,12,203,160,236,150,69,219,71,45,250,5,201,67,46,235,141,173,207,93,4,72,110,249,86,66,101,226,67,233,161,197,38,76,207,175,3,82,21,18,210,19,28,235,222,162,236,241,63,241,76,35,18,43,88,177,171,196,159,224,209,238,70,212,37,133,251,90,110,240,216,170,233,51,235,63,32,161,184,45,184,129,96,157,207,201,130,199,130,19,44,255,226,167,91,54,222,69,212,23,33},
{0,215,215,16,95,141,188,130,250,5,57,32,32,227,198,31,212,250,226,230,66,97,13,46,53,218,58,97,154,10,195,17,167,112,86,163,78,224,54,44,121,232,239,170,97,112,114,218,247,237,110,92,195,17,176,212,60,29,30,120,106,1,222,183,89,182,53,179,84,68,118,154,190,210,200,96,238,93,155,207,253,118,74,76,228,55,99,24,75,247,123,3,159,142,13,118,123,7,138,117,152,217,168,230,132,157,135,51,198,238,21,8,99,165,64,87,242,216,164,181,241,166,144,198,54,192,236,241,215,219,131,29,170,95,49,128,188,56,129,230,89,126,170,26,220,217,197,150,250,217,93,180,136,255,133,78,222,135,130,252,235,48,92,225,126,219,4,61,176,116,92,59,155,125,207,134,242,152,215,169,115,62,165,2,236,197,150,67,127,17,191,220,75,110,37,180,141,153,168,150,85,77,131,41,159,24,183,239,188,41,77,32,18,224,39,30,106,168,255,242,185,196,231,117,12,214,207,63,6,164,188,177,137,236,106,129,251,41,30,83,68,206,30,215,250,195,182,101,97,10,11,212,218,118,155,105},
{0,215,179,48,97,131,175,169,131,45,167,125,157,3,208,165,193,225,95,241,65,166,254,16,194,101,62,210,163,210,74,242,89,214,190,33,16,22,58,45,116,183,68,62,10,172,96,224,64,119,51,2,194,66,203,72,201,191,214,7,237,61,227,47,195,48,171,19,233,153,229,168,37,178,243,162,185,56,216,204,218,137,55,138,238,253,204,155,145,220,65,237,219,160,241,55,112,58,164,149,121,252,38,38,131,223,40,162,115,219,101,95,103,12,209,182,9,152,38,214,173,198,56,231,189,90,78,64,219,78,149,1,37,130,3,180,241,180,240,42,16,189,85,23,115,64,117,238,12,3,203,168,59,125,90,216,175,193,137,249,156,91,214,150,111,103,162,171,92,77,12,119,98,44,49,200,28,136,102,10,75,228,6,115,142,196,139,49,183,162,144,113,89,245,136,203,51,65,40,119,163,252,190,133,246,106,19,83,75,40,221,127,116,26,199,207,37,44,80,169,131,184,84,206,244,241,177,127,98,161,245,126,214,129,222,91,34,58,59,63,49,96,78,82,86,130,232,140,98,116,144,180,35,56,5,243},
{0,215,123,80,153,181,197,120,108,88,2,72,210,23,20,29,140,87,39,165,125,182,101,109,226,116,86,20,37,194,31,188,239,9,63,55,122,180,143,10,161,5,250,60,37,11,230,152,156,18,95,102,246,171,244,228,18,111,113,161,50,56,156,235,138,172,222,129,91,78,155,42,128,208,38,109,30,163,96,29,165,12,120,246,220,244,163,170,170,42,89,162,40,206,250,54,247,15,30,91,73,44,21,51,134,82,182,148,57,160,8,51,186,118,111,173,243,148,79,133,15,118,255,71,18,128,56,182,149,154,118,131,227,190,151,39,234,113,159,151,40,10,164,146,92,179,241,99,190,162,209,135,158,93,145,242,184,60,178,32,223,114,53,76,89,119,209,133,180,3,171,69,41,139,248,148,220,87,211,138,14,7,147,222,92,125,53,58,122,161,74,2,88,117,215,141,40,210,155,209,157,65,33,189,193,20,51,141,157,249,29,229,10,128,224,209,157,231,165,186,75,231,167,56,171,29,49,29,187,247,79,27,217,68,107,101,9,102,198,102,32,221,131,102,50,252,149,6,119,18,195,142,239,6,33,146},
{0,215,246,240,94,91,164,117,71,162,20,162,177,243,216,187,40,78,4,112,106,251,93,128,197,224,47,193,203,15,87,149,172,52,205,247,14,93,53,107,248,141,92,106,117,2,156,177,95,85,8,216,143,155,18,177,215,239,136,196,76,241,164,154,61,228,56,89,50,1,116,132,243,32,20,186,91,203,95,168,176,235,72,151,15,51,160,214,158,175,122,159,149,126,210,105,128,21,8,1,91,186,205,235,83,83,109,236,164,165,87,110,16,239,195,228,125,210,4,179,146,120,164,215,107,108,31,150,65,8,105,22,111,25,9,159,51,252,135,52,68,27,82,219,136,231,101,12,136,33,177,158,57,151,93,255,126,189,182,10,77,43,27,104,13,245,31,120,198,230,137,168,129,251,10,169,241,180,148,33,86,44,121,172,29,70,217,91,193,123,68,99,152,97,139,183,203,98,102,143,61,249,178,223,123,95,203,165,132,59,194,216,91,198,39,30,24,219,194,251,206,96,205,37,102,175,117,149,22,154,212,137,104,91,52,20,223,125,81,177,107,197,167,13,229,168,68,8,115,196,167,243,133,52,72,202},
{0,215,241,13,101,42,255,86,2,219,136,130,31,211,100,183,186,218,72,195,91,59,106,79,170,21,241,148,49,187,116,181,36,250,31,143,229,91,80,237,229,225,45,8,64,90,145,114,182,30,141,118,46,2,43,76,248,62,129,70,182,41,29,186,251,91,214,40,212,69,105,33,221,213,225,203,208,102,67,3,212,165,147,15,43,180,90,90,197,20,27,33,185,9,23,236,74,166,55,99,157,23,33,223,105,58,246,83,168,97,59,131,83,80,248,185,71,253,197,249,245,156,197,127,14,11,3,205,7,124,108,245,56,97,194,210,61,176,235,254,170,174,41,56,15,207,36,154,21,194,232,64,179,130,112,158,112,21,244,175,28,6,112,7,71,198,190,24,40,106,36,194,60,245,88,247,209,52,54,80,22,12,5,197,132,208,146,255,248,6,126,94,70,206,140,147,198,5,156,42,229,139,48,188,238,30,91,75,27,6,102,120,109,97,199,207,143,45,56,228,119,251,137,102,137,110,248,26,132,185,56,114,199,211,133,157,121,26,173,159,99,181,99,211,168,59,180,235,180,42,50,121,212,110,210,27},
{0,215,255,23,137,130,56,191,16,77,57,255,132,110,66,243,111,251,100,244,168,64,143,116,75,240,143,192,102,163,177,114,244,204,249,188,66,133,47,85,138,203,230,69,207,74,106,18,236,4,79,207,203,106,121,56,222,135,118,252,215,59,236,9,44,24,18,170,84,220,52,79,255,80,102,230,151,76,184,209,226,21,205,6,52,215,11,81,189,128,205,244,65,143,14,110,194,45,129,188,144,56,58,28,145,194,242,156,66,14,10,40,146,82,76,86,29,34,250,4,80,131,175,16,210,72,130,134,167,144,220,9,177,50,63,101,30,111,112,94,28,184,154,36,35,228,197,116,75,216,65,46,165,32,182,134,139,246,129,84,1,225,228,78,41,175,152,243,141,255,118,233,181,61,227,137,82,130,167,36,16,47,84,6,152,252,89,8,220,169,247,247,240,228,248,253,91,246,14,32,103,32,68,20,179,254,224,215,34,220,55,230,241,9,224,209,180,62,253,120,244,196,79,195,234,180,178,6,212,122,52,203,23,101,85,205,240,138,212,64,176,195,118,185,147,217,25,121,79,34,196,65,162,232,41,252},
{0,215,227,57,30,176,144,26,128,31,167,183,126,156,187,40,190,240,198,250,200,41,29,66,166,152,23,143,188,134,191,135,235,116,185,199,189,198,107,196,180,133,35,149,245,160,215,148,170,196,15,248,127,240,83,92,29,126,46,39,131,182,203,218,207,86,208,54,233,146,57,218,154,83,99,107,132,209,63,181,164,113,230,247,54,190,112,42,226,155,192,194,194,253,19,108,175,107,53,251,126,45,169,160,152,51,71,147,218,60,139,62,17,176,179,197,45,236,103,193,184,221,188,227,241,249,13,110,121,107,151,239,72,194,116,214,75,169,229,20,54,137,77,54,90,97,117,23,155,150,248,142,167,202,22,111,152,167,54,87,160,73,103,51,212,96,18,196,177,160,152,252,128,36,206,179,169,201,209,21,143,206,203,149,164,61,205,177,8,250,181,66,103,56,196,212,180,212,208,197,10,24,255,39,119,17,210,209,162,182,250,176,239,51,39,30,76,89,249,1,191,184,7,10,36,189,10,112,141,84,232,222,132,222,123,131,56,107,214,69,97,169,240,148,113,101,206,87,173,185,123,215,236,163,235,254},
{0,215,219,75,120,74,71,70,116,231,2,21,50,66,12,133,47,75,109,8,27,39,131,135,235,89,251,152,76,104,11,102,44,82,209,145,240,28,134,195,202,180,87,41,195,202,193,104,150,189,19,88,25,199,28,111,162,97,66,146,47,97,226,193,173,114,131,91,91,147,112,184,237,136,28,29,228,10,28,171,224,35,40,196,158,239,63,30,231,123,5,115,7,79,107,210,204,85,69,42,104,223,64,145,151,196,148,224,23,89,252,255,35,231,188,12,24,84,245,254,89,209,193,182,78,112,76,45,86,200,111,166,206,100,189,67,12,162,79,78,119,76,168,45,207,245,241,27,1,189,212,197,138,21,46,201,20,139,92,235,103,239,95,195,174,43,227,109,244,174,252,163,144,138,159,135,236,189,237,186,238,146,137,127,6,39,47,229,137,67,104,159,21,207,108,4,224,198,152,88,131,10,27,19,215,129,215,73,222,142,70,47,2,12,199,207,205,10,182,219,113,231,32,21,246,7,154,197,67,186,179,84,170,20,50,144,153,56,23,49,77,80,74,76,47,70,48,63,31,90,209,164,156,179,153,29},
{0,215,171,221,253,127,143,207,135,140,20,151,69,125,72,224,202,143,68,152,193,241,245,42,29,82,107,116,195,124,210,22,233,192,128,121,140,203,62,54,102,126,30,103,56,163,255,227,162,156,81,206,238,213,50,207,114,172,82,45,154,53,162,178,8,163,92,174,50,214,108,46,254,1,139,220,123,200,251,210,4,1,56,218,3,103,46,116,194,204,47,216,137,130,57,197,213,195,82,5,35,191,184,180,245,88,120,157,151,254,134,203,54,255,72,110,148,198,175,92,39,199,90,116,164,174,196,26,72,40,71,14,216,153,81,206,46,24,136,76,91,242,84,181,43,21,101,129,148,148,69,131,22,162,117,44,127,19,135,6,145,201,45,20,107,170,133,187,147,94,95,19,130,86,203,103,189,100,202,61,95,100,126,233,183,182,102,173,77,166,123,81,123,37,222,43,92,157,49,13,165,137,97,108,181,151,6,84,215,230,104,170,181,149,224,209,29,41,144,134,6,96,194,245,118,157,88,238,142,72,30,18,191,181,195,166,174,161,246,21,18,61,108,54,238,143,112,84,122,243,85,133,224,216,228,196},
{0,215,75,122,211,158,5,87,76,152,136,104,27,91,215,201,60,151,188,192,175,185,239,76,37,177,87,8,209,197,169,175,108,229,208,16,90,152,23,12,75,210,43,202,110,189,5,233,11,195,41,203,85,200,165,227,34,147,213,33,9,205,153,236,58,12,38,39,212,10,119,133,210,73,90,206,165,177,135,100,93,81,113,214,252,32,113,14,40,211,254,254,167,27,18,220,220,12,15,242,176,251,8,46,187,238,199,248,147,69,96,181,200,19,102,223,70,55,43,241,206,15,27,98,58,171,226,130,243,145,174,65,79,200,20,151,243,68,94,71,21,114,42,97,174,10,36,245,30,138,154,248,2,234,126,112,236,159,85,101,172,177,144,84,243,107,253,39,29,167,239,130,213,195,179,166,217,6,48,168,107,139,32,82,156,146,196,253,195,111,139,124,224,231,23,75,210,114,223,138,23,175,66,245,229,79,158,218,201,97,63,243,187,177,39,30,16,125,52,117,242,251,23,97,47,118,231,172,114,132,203,5,246,157,11,220,186,150,155,34,70,41,81,144,90,1,59,59,223,130,66,104,248,30,250,136},
{161,0,228,204,37,165,95,180,84,152,0,255,211,82,40,94,44,72,111,102,51,247,239,166,72,97,99,107,103,50,107,247,47,111,89,160,128,222,39,184,149,113,41,237,150,16,127,65,217,140,86,224,230,232,94,136,207,54,247,169,39,121,252,12,29,12,15,169,0,220,156,133,137,5,247,201,15,22,184,209,251,190,49,125,87,134,112,42,239,96,66,105,145,199,188,233,108,139,177,16,43,47,34,70,16,38,28,152,40,103,39,88,77,248,243,176,200,18,248,36,216,226,226,92,199,141,254,39,146,230,183,65,214,186,226,92,186,45,229,20,130,55,42,222,16,112,0,116,171,191,109,48,165,32,154,183,246,15,70,186,75,169,108,117,92,39,228,249,165,213,31,125,27,213,12,125,41,133,146,130,51,185,218,59,28,143,243,230,40,187,133,254,233,19,194,102,180,212,117,178,120,155,2,162,229,218,210,209,151,156,39,188,4,41,224,209,16,144,139,215,244,0,242,220,45,90,58,11,150,150,80,198,83,114,140,171,28,110,113,187,78,107,247,78,139,148,210,16,157,78,215,147,246,44,71,194},
{0,0,213,73,148,11,223,43,154,44,0,183,189,173,173,77,250,188,96,132,219,199,14,231,142,16,135,60,160,112,230,223,137,14,93,68,247,67,70,145,139,88,78,253,145,234,155,32,51,244,183,202,232,5,95,39,130,82,88,1,103,55,12,25,19,43,249,243,0,146,187,102,193,112,19,112,163,23,63,181,39,45,137,50,60,54,63,30,56,44,183,85,212,241,21,80,3,70,135,126,183,21,144,183,206,202,44,34,70,125,86,35,91,89,109,154,83,233,139,135,137,20,47,70,243,55,1,59,230,152,226,196,36,55,50,168,230,91,79,78,88,204,21,177,245,129,0,23,195,163,105,146,167,202,74,59,81,104,55,136,251,7,221,129,3,69,208,198,60,74,58,63,242,57,155,214,218,249,189,208,77,68,144,201,60,107,156,125,151,130,25,108,117,210,218,127,224,198,55,137,90,44,137,174,212,154,215,73,247,200,91,146,119,140,39,30,1,153,248,91,191,0,180,234,69,208,13,115,231,113,249,233,155,77,188,183,194,70,33,119,31,8,174,205,121,19,247,203,82,27,115,67,177,190,177,176},
{0,0,183,219,106,39,248,209,164,81,0,21,79,34,200,172,27,179,142,57,122,16,196,89,12,141,199,94,1,89,203,224,240,211,213,164,112,218,161,7,156,109,227,119,85,106,91,137,57,228,175,7,237,225,105,43,33,35,108,59,220,183,21,13,180,57,67,30,0,147,92,151,76,134,10,102,104,90,28,171,127,72,138,77,172,168,46,116,220,100,219,176,123,244,178,199,160,62,100,15,67,242,67,135,43,92,3,55,119,118,85,208,53,140,39,5,195,232,136,93,73,58,119,172,182,246,126,166,126,23,157,255,103,105,148,213,29,63,136,76,156,47,132,103,224,234,0,27,142,180,11,234,138,21,196,211,125,66,194,164,78,64,183,224,241,57,185,62,69,123,230,225,171,170,73,98,118,193,190,143,145,168,190,49,162,168,91,188,100,159,8,213,20,13,56,70,92,157,113,130,239,29,41,179,252,183,6,84,214,68,170,235,107,83,199,207,216,198,108,19,113,0,211,129,229,141,14,253,139,29,147,188,61,169,182,33,87,145,98,8,130,219,82,233,220,233,85,242,58,166,82,60,142,77,241,191},
{0,0,115,112,181,187,42,13,73,227,0,151,99,167,132,106,173,76,9,252,6,77,126,107,160,169,9,161,28,43,186,111,107,172,8,200,123,215,120,245,254,3,161,64,169,105,138,84,196,211,37,153,9,133,20,82,107,56,16,44,58,92,1,38,6,223,139,241,0,214,75,236,176,216,254,5,197,198,251,210,21,75,124,217,208,53,113,14,246,85,200,240,70,192,6,98,214,150,236,11,148,96,18,197,94,87,190,19,148,142,231,229,88,84,165,162,72,157,18,134,244,69,152,158,81,209,240,53,241,88,18,126,108,110,158,215,206,44,94,71,107,232,66,218,255,220,0,129,74,221,99,154,22,162,137,238,201,179,221,100,225,47,129,53,153,127,205,95,103,20,93,205,84,82,127,143,208,92,117,100,55,110,183,107,177,221,164,57,232,114,153,95,187,164,135,58,210,114,8,160,228,192,172,73,106,215,158,218,25,29,89,222,51,208,224,209,131,32,23,65,6,0,168,112,237,192,53,2,33,219,143,73,22,51,124,199,93,12,72,43,76,217,52,9,191,69,153,174,51,63,158,93,126,36,128,211},
{161,215,148,210,160,20,189,47,124,28,57,72,201,202,125,97,201,162,135,197,239,15,75,25,172,36,156,238,30,38,180,95,207,243,246,215,80,165,57,59,119,89,148,218,30,194,70,234,109,187,19,205,109,125,163,196,140,10,79,187,87,88,160,26,166,33,64,109,84,78,175,216,27,219,153,47,144,179,28,171,248,215,156,123,210,163,112,42,169,48,197,76,61,52,80,254,139,242,57,252,186,97,215,153,101,225,177,199,49,89,41,36,188,163,11,153,106,105,76,149,167,212,167,138,201,22,177,206,143,79,170,246,10,71,131,6,164,28,229,20,65,201,30,182,134,28,197,99,154,120,47,58,138,21,95,49,74,151,106,37,87,181,60,160,11,11,47,225,98,223,119,175,39,106,210,135,112,159,73,245,153,11,65,129,73,71,140,14,102,86,203,92,44,71,247,198,180,212,133,146,137,240,239,182,79,234,210,209,84,233,16,173,172,32,0,0,108,217,186,207,75,196,224,114,11,56,3,197,254,101,208,105,170,228,50,150,252,115,23,127,96,44,151,209,35,236,30,193,150,215,52,190,59,205,153,15},
{161,0,71,41,244,61,232,193,201,72,158,130,98,65,202,8,199,10,142,57,90,12,130,41,12,141,210,249,38,167,0,117,246,131,161,49,245,228,106,147,187,102,165,103,74,10,66,48,171,156,182,74,242,15,234,163,128,188,133,65,14,172,123,103,201,174,123,0,189,69,114,213,191,0,176,78,175,140,96,29,75,170,69,157,122,172,38,89,172,60,0,47,123,244,30,120,58,178,82,120,228,4,225,193,245,75,205,244,245,31,156,16,52,31,212,22,164,177,13,47,151,56,35,152,113,34,57,175,126,23,133,20,226,243,235,247,240,148,224,177,0,52,48,236,19,212,176,154,0,149,231,113,158,93,170,37,70,147,0,174,5,23,157,20,40,12,12,199,80,39,227,181,176,109,14,150,197,188,110,18,192,53,169,23,82,20,235,137,56,166,57,128,94,2,228,209,228,219,177,40,0,228,92,82,44,198,30,171,19,166,162,245,211,235,39,30,222,121,230,44,119,124,199,209,219,159,226,240,49,158,194,216,121,2,111,51,203,174,199,247,63,121,27,171,87,34,112,85,26,243,176,204,225,147,159,103},
{0,0,142,123,247,201,74,125,6,50,165,255,162,106,152,120,236,170,9,252,188,252,227,117,160,169,198,166,239,242,0,218,171,46,198,61,56,130,160,73,79,45,15,202,234,47,19,67,166,195,157,191,95,62,76,117,81,36,158,93,117,25,192,117,48,102,93,0,178,220,224,114,109,0,143,242,31,50,95,168,243,13,62,11,237,124,251,168,83,157,0,209,70,192,154,42,53,234,15,88,217,137,239,114,187,139,20,210,72,207,69,190,40,166,200,84,115,104,36,129,112,183,117,87,162,225,97,149,241,88,190,238,235,52,240,233,98,129,215,153,0,70,24,154,88,83,132,116,0,31,64,43,57,151,181,71,187,170,0,203,26,130,88,84,112,239,251,153,7,252,101,172,166,46,218,234,103,213,42,132,10,231,61,157,3,129,74,213,152,111,86,229,34,159,9,236,107,193,108,179,0,75,221,23,129,227,220,229,236,31,135,105,197,158,199,207,105,40,53,191,244,95,150,216,51,169,174,1,211,10,144,60,9,207,187,26,136,20,191,130,233,92,83,228,198,60,59,204,69,130,245,52,4,14,218,96}
};


#define SIZE 262144

typedef union uni {
  unsigned long long int dd[2];
  unsigned int cc[4];
  unsigned short ss[8];
  unsigned char m[16];
} on;
typedef struct {
  on e1;
  on e2;
} combo;
//unsigned long long int ff;
//unsigned long long int f;
unsigned long long int g1[256][2],g2[256][2],g3[256][2],g4[256][2];
unsigned int f2=0xffffffff;
unsigned long long int G[16][16][2];
unsigned char buf[K]={0};
unsigned char buf1[K/2]={0};
unsigned char buf2[K/2]={0};
on c1,c2,C,u,u1,a,b,GG,dd,de,IV,VI;
unsigned long long int c3[5];
unsigned char e[K];
unsigned char buff[SIZE];
int pp;
unsigned char h2[K][256];

//int N=256;

//unsigned char gf[16]={0,1,2,4,8,9,11,15,7,14,5,10,13,3,6,12};
//unsigned char fg[16]={0,1,2,13,3,10,14,8,4,5,11,6,15,12,9,7};
//unsigned char gf[256]={0,1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142};
//unsigned char fg[256]={0,1,2,26,3,51,27,199,4,224,52,239,28,105,200,76,5,101,225,15,53,142,240,130,29,194,106,249,201,9,77,114,6,139,102,48,226,37,16,34,54,148,143,219,241,19,131,70,30,182,195,126,107,40,250,186,202,155,10,121,78,229,115,167,7,192,140,99,103,222,49,254,227,153,38,180,17,146,35,137,55,209,149,207,144,151,220,190,242,211,20,93,132,57,71,65,31,67,183,164,196,73,127,111,108,59,41,85,251,134,187,62,203,95,156,160,11,22,122,44,79,213,230,173,116,244,168,88,8,113,193,248,141,129,100,14,104,75,223,238,50,198,255,25,228,166,154,120,39,185,181,125,18,69,147,218,36,33,138,47,56,64,210,92,150,189,208,206,145,136,152,179,221,253,191,98,243,87,212,172,21,43,94,159,133,61,58,84,72,110,66,163,32,46,68,217,184,124,165,119,197,24,74,237,128,13,112,247,109,162,60,83,42,158,86,171,252,97,135,178,188,205,63,91,204,90,96,177,157,170,161,82,12,246,23,236,123,118,45,216,80,175,214,234,231,232,174,233,117,215,245,235,169,81,89,176};




int deg(char s[K]){
int i,j,k;

  k=K;i=0;
  while(k>0){
    if(s[k]>0)
      i=k;
  }

    return i;

}

void tr1e(){
  int i,j;

  for(i=0;i<64;i++){
    j=0;
    while(j<64){
    if(gf[j]==i){
      printf("%d,",j);
      break;
    }
    j++;
  }
  }

}

int code (unsigned char str[256]){
  int i,c,d;
  unsigned long long int u=0;


  //gets(str);
  i=0;
  do
    {
      c = str[i] & 0xff;
      e[i]=c;
      if((c & 0x80) > 0)
        {
          ++i;
          d = str[i] & 0xff;
          e[i]=d;
          c^=(d<<8);
    //      printf("'%c%c' %u\n",c,d,c);
        }
      else
        {
      //    printf("'%c' %d \n",c,c);
        }
      ++i;
    }while(c != '\0');
  //printf("\n");
  /*
  for(i=0;i<16;i++)
    printf("%u ",e[i]);
  printf("\n");
    */
  for(i=0;i<8;i++){
    u=(u<<8)^e[i];
//    printf("%llx\n",u);
  }
  c3[0]=u;u=0;
  for(i=8;i<16;i++)
    u=(u<<8)^e[i];
  c3[1]=u;u=0;
    for(i=16;i<24;i++)
    u=(u<<8)^e[i];
  c3[2]=u;u=0;
    for(i=24;i<32;i++)
    u=(u<<8)^e[i];
  c3[3]=u;

//    printf("%llu %llu\n",c3[0],c3[1]);

  return 0;
}



void init(unsigned long long int uu[4]){
unsigned long long int f,ff;

  u.dd[0]=0;
  u.dd[1]=0;
  u1.dd[0]=0;
  u1.dd[1]=0;
  c1.cc[0]=2183266401UL;
  c1.cc[1]=2186346530UL;
  c1.cc[2]=2183266313UL;
  c1.cc[3]=2188574773UL;
  c2.cc[0]=2212298975UL;
  c2.cc[1]=2211905752UL;
  c2.cc[2]=2198339796UL;
  c2.cc[3]=2210398243UL;
  u.dd[0]=uu[0];
    //0x11111122;
  u.dd[1]=uu[1];
    //0x2222eeee;
  u1.dd[0]=uu[2];
  //0x33333344;
  u1.dd[1]=uu[3];
  //0x4444cccc;
  ff=0xf0f0f0f0f0f0f0f0ULL;
   f=0x0f0f0f0f0f0f0f0fULL;


}

void g64(int n){
int i,j;


  for(i=0;i<n;i++){
    for(j=0;j<8;j++){
      g1[i][0]^=(g1[i][0]<<8)^h3[j][i];
      g2[i][0]^=(g2[i][0]<<8)^h1[j][i];
      g3[i][0]^=(g3[i][0]<<8)^h1[j][i];
      g4[i][0]^=(g4[i][0]<<8)^h2[j][i];
//      printf("h3=%u\n",h4[j][i]);
    }
    for(j=8;j<16;j++){
      g1[i][1]^=(g1[i][1]<<8)^h3[j][i];
      g2[i][1]^=(g2[i][1]<<8)^h1[j][i];
      g3[i][1]^=(g3[i][1]<<8)^h1[j][i];
      g4[i][1]^=(g4[i][1]<<8)^h2[j][i];
    }
    for(j=16;j<24;j++){
      g4[i][2]^=(g4[i][2]<<8)^h2[j][i];
//      printf("g4=%llu",g4[i][2]);
    }
    for(j=24;j<32;j++){
      g4[i][3]^=(g4[i][3]<<8)^h2[j][i];
    }
  }

}


on s5(on cc){
  int a[16]={7,3,15,11,5,1,13,9,6,2,14,10,4,0,12,8};
  int i,j;
  unsigned int b=0,c;


  for(i=0;i<16;i++)
    GG.m[a[i]]=cc.m[i];

  for(i=0;i<4;i++)
    b^=(GG.m[i]<<(8*i));
  c=b&0x1f;
  b=(b>>5)^(c<<27);
  for(i=0;i<4;i++){
    GG.m[i]=b&0xff;
    b=(b>>8);
  }
  for(i=0;i<16;i++)
  GG.m[a[i]]^=GG.m[i];

return GG;
}




void hasha(unsigned char fin[256]){
  int i,j;
  char fout[256];
  int line=0,k=0,n=0,read_size;
  unsigned long long int z,zz;
//  on dd,dd1;

  g64(256);
  code((unsigned char *)fin);
//  printf("in hash %llx %llx %llx %llx\n",c3[0],c3[1],c3[2],c3[3]);
  if(c3[0]>0 && c3[1]==0){
    printf("a�����Z�����܂�\n");
      exit(1);
  }

//  printf("%llu %llu %llu %llu\n",c3[0],c3[1],c3[2],c3[3]);
  init(c3);


  //  exit(1);

//  memcpy(dd,&fin[256],16);
  dd.dd[0]=c3[0];
  dd.dd[1]=c3[1];
  de.dd[0]=c3[2];
  de.dd[1]=c3[3];
  while(k<100){
    if(de.dd[0]>0){
      for(i=0;i<4;i++){
        c1.cc[i]=(c1.cc[i]+dd.cc[i]&f2)^c1.cc[(i+1)&0x3];
        c2.cc[i]=(c2.cc[i]+de.cc[i]&f2)^c2.cc[(i+1)&0x3];
      }
    }
    if(de.dd[0]==0){
      for(i=0;i<4;i++){
        c1.cc[i]=(c1.cc[i]+dd.cc[i]&f2)^c1.cc[(i+1)&0x3];
        c2.cc[i]=(c2.cc[i]+dd.cc[i]&f2)^c2.cc[(i+1)&0x3];
      }
    }

    i=c1.cc[0]%256;
    c1.dd[0]^=g1[i][0];
    c1.dd[1]^=g1[i][1];
    i=c2.dd[0]%64;
    c2.dd[0]^=g1[i][0];
    c2.dd[1]^=g1[i][1];
    C=c2;
    c2=s5(c1);
    c1=s5(C);

    if(u1.dd[0]==0){
      for(i=0;i<2;i++){
        c1.dd[i]^=u.dd[i];
        c2.dd[i]^=u.dd[i];
      }
    }
    if(u1.dd[0]>0){
      for(i=0;i<2;i++){
        c1.dd[i]^=u.dd[i];
        c2.dd[i]^=u1.dd[i];
      }
    }

      //for(i=0;i<16;i++){
      //  buff[i+k*16]^=c1.m[i];
      //  buff[i+k*16]^=c2.m[i];
     // }
//    }
    k++;
//    printf("%d ",k);
//    }
  }
//  IV.dd[0]=0; IV.dd[1]=0;
  c3[0]=c1.dd[0];
  c3[1]=c1.dd[1];
  c3[2]=c2.dd[0];
  c3[3]=c2.dd[1];
  i=0;j=0;k=0;

    printf("%02x %02x %02x %02x %02x %02x %02x %02x\n",c1.cc[0],c1.cc[1],c1.cc[2],c1.cc[3],c2.cc[0],c2.cc[1],c2.cc[2],c2.cc[3]);

}


void ff(){
  int i,j;

  for(i=0;i<N;i++){
    for(j=0;j<N;j++){
      if(gf[j]==i)
        printf("%u,",j);

    }
  }

}


int mlt(int x, int y){

    if(x==0||y==0)
        return 0;

  return ((x+y-2)%(N-1))+1;
}


int mltn(int n,int x){
  int i,j;

  i=x;
    for(j=0;j<n-1;j++)
      i=mlt(i,x);

  return i;
}



int dv(int x,int y){

  if(x==0)
    return 0;

  return ((x-y+(N-1))%(N-1))+1;
}


void det2(unsigned char g[K+1]){
  int i,j;
  //  unsigned char g[K+1];

  for(i=0;i<K;i++)
    mat[i][0]=g[i];
  for(i=0;i<N;i++)
    mat[0][i]=1;
  for(i=1;i<N;i++)
    mat[1][i]=i;

  for(j=1;j<N;j++){
    for(i=2;i<K;i++)
      mat[i][j]=g[i]^gf[mlt(fg[j],fg[mat[i-1][j]])];
  }
  for(i=0;i<K;i++){
    for(j=0;j<N;j++)
      printf("%d ",mat[i][j]);
    printf("\n");
  }

}


void det(){
  int i,j;
  unsigned char g[K+1];

  for(i=0;i<K;i++)
    mat[i][0]=g[i];
  for(i=0;i<N;i++)
    mat[0][i]=1;
  for(i=1;i<N;i++)
    mat[1][i]=i;

  for(j=1;j<N;j++){
    for(i=2;i<K;i++)
      mat[i][j]=gf[mlt(fg[j],fg[mat[i-1][j]])];
  }
  for(i=0;i<K;i++){
    for(j=0;j<N;j++)
      printf("%d ",mat[i][j]);
    printf("\n\n");
  }

}

//deg(f)>deg(g)
unsigned char pmul(unsigned char f[],unsigned char g[]){
int i,j,k,c;
unsigned char h[64]={0};

i=0;
for(i=0;i<32;i++){
  if(f[i]>0)
  c=i;
}

printf("%d %d\n",f[0],g[0]);
printf("%d %d\n",f[1],g[1]);

    for(i=0;i<2;i++){
    for(j=0;j<c+1;j++){
    h[i+j]^=gf[mlt(fg[f[j]],fg[g[i]])];
//    printf("%d ",h[i+j]);
    }
    }

    for(i=0;i<3;i++)
    printf("%d ",h[i]);
    printf("\n");


    return *h;

}

    //
int Inv(unsigned char b){
  int i;

      for(i=0;i<256;i++){
        if(gf[mlt(fg[i],fg[b])]==1)
          return i;
      }

    }

/* ========== ガウスジョルダン法の関数 =================*/
void gauss_jordan(int n, int a[][100], int b[]){

    	   int ipv, i, j;
    	   int inv_pivot, temp;

    	   for(ipv=1 ; ipv <= n ; ipv++){

    	      /* ---- 対角成分=1(ピボット行の処理) ---- */
    	      inv_pivot = Inv(a[ipv][ipv]);
    	      for(j=1 ; j <= n ; j++){
    	         a[ipv][j] = gf[mlt(fg[a[ipv][j]],fg[inv_pivot])];
    	      }
    	      b[ipv] = gf[mlt(fg[inv_pivot],fg[b[ipv]])];

    	      /* ---- ピボット列=0(ピボット行以外の処理) ---- */
    	      for(i=1 ; i<=n ; i++){
    	         if(i != ipv){
    	            temp = a[i][ipv];
    	            for(j=1 ; j<=n ; j++){
    	               a[i][j] ^= gf[mlt(fg[temp],fg[a[ipv][j]])];
    	            }
    	            b[i] ^= gf[mlt(fg[temp],fg[b[ipv]])];
    	         }
    	      }

    	   }
    	}



void bch(void){
int i,j;
  unsigned int k;

  for(i=1;i<N;i++){
    k=(gf[i]>>5)%2;
    printf("%u ",k^1);
  }
printf("\n");

}


unsigned char hhh[K/2],FF[K];





int lk2(){
  unsigned int o=0,x,a,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,c[K+1]={0},d[2],a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32;
int i,j,read_size,count=0;
unsigned char e[K]={0}, s[K]={0};
unsigned char r[K+1]={0};
unsigned char v[N]={1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0};
unsigned char g[K+1];
FILE *fp;
char str[K];
time_t *timer;

fp=fopen("key.bin","rb");
read_size=fread(c,1,32,fp);

  if(fp==NULL){
//    enky();
    printf("NULL\n");
//    fq=fopen("key.bin","wb");
  }
//read_size=fread(m,1,32,fp);
//printf("k%u\n",read_size);
//system("pause");
//c2=s5(c2);
if(read_size==0){
  for(i=0;i<16;i++){
    c[i]=g[i+1]=c1.m[i];
    c[i+16]=g[i+17]=c2.m[i];
//    printf("h%u ",c2.m[i]);
  }
}

if(read_size>0){
  for(i=0;i<K;i++){
    g[K-i]=c[i]%N;
//    if(F[i]!=0)
//    printf("u%u ",g[i]);
    }
}

//srand(time(timer));
for(i=0;i<K+1;i++){

//  g[i]=rand()%N;
  printf("u%u ",g[i]);
}

//exit(1);
g[0]=1;




for(x=0;x<N;x++){
//#print fg[3]-1
//#  a=gf[mlt(fg[x],fg[3])];
//#  a=gf[mlt(mlt(fg[x],fg[x]),fg[x])]^gf[fg[x]]^1;


//a=gf[mltn(32,fg[x])]^gf[mltn(30,fg[x])]^gf[mlt(fg[234],mltn(24,fg[x]))]^gf[mltn(20,fg[x])]^123;


//a128=gf[mltn(128,fg[x])]
//a64=gf[mltn(64,fg[x])]

a32=gf[mltn(K,fg[x])];
  a31=gf[mlt(fg[g[K-31]],mltn(31,fg[x]))];
    a30=gf[mlt(fg[g[K-30]],mltn(30,fg[x]))];
    a29=gf[mlt(fg[g[K-29]],mltn(29,fg[x]))];
    a28=gf[mlt(fg[g[K-28]],mltn(28,fg[x]))];
    a27=gf[mlt(fg[g[K-27]],mltn(27,fg[x]))];
    a26=gf[mlt(fg[g[K-26]],mltn(26,fg[x]))];
    a25=gf[mlt(fg[g[K-25]],mltn(25,fg[x]))];
    a24=gf[mlt(fg[g[K-24]],mltn(24,fg[x]))];
    a23=gf[mlt(fg[g[K-23]],mltn(23,fg[x]))];
    a22=gf[mlt(fg[g[K-22]],mltn(22,fg[x]))];
    a21=gf[mlt(fg[g[K-21]],mltn(21,fg[x]))];
    a20=gf[mlt(fg[g[K-20]],mltn(20,fg[x]))];
    a19=gf[mlt(fg[g[K-19]],mltn(19,fg[x]))];
    a18=gf[mlt(fg[g[K-18]],mltn(18,fg[x]))];
    a17=gf[mlt(fg[g[K-17]],mltn(17,fg[x]))];

a16=gf[mlt(fg[g[K-16]],mltn(16,fg[x]))];
a15=gf[mlt(fg[g[K-15]],mltn(15,fg[x]))];
a14=gf[mlt(fg[g[K-14]],mltn(14,fg[x]))];
a13=gf[mlt(fg[g[K-13]],mltn(13,fg[x]))];
a12=gf[mlt(fg[g[K-12]],mltn(12,fg[x]))];
a11=gf[mlt(fg[g[K-11]],mltn(11,fg[x]))];
a10=gf[mlt(fg[g[K-10]],mltn(10,fg[x]))];
a9=gf[mlt(fg[g[K-9]],mltn(9,fg[x]))];
a8=gf[mlt(fg[g[K-8]],mltn(8,fg[x]))];
a7=gf[mlt(fg[g[K-7]],mltn(7,fg[x]))];
a6=gf[mlt(fg[g[K-6]],mltn(6,fg[x]))];
a5=gf[mlt(mlt(mlt(fg[x],fg[x]),mlt(fg[x],fg[x])),mlt(fg[g[K-5]],fg[x]))];
a4=gf[mlt(mlt(mlt(fg[x],fg[x]),mlt(fg[x],fg[x])),fg[g[K-4]])];
a3=gf[mlt(mlt(fg[x],fg[x]),mlt(fg[x],fg[g[K-3]]))];
a2=gf[mlt(mlt(fg[x],fg[x]),fg[g[K-2]])];
a=gf[mlt(fg[x],fg[g[K-1]])]^g[K];
 a=a^a2^a3^a4^a5^a6^a7^a8; //^a9^a10^a11^a12^a13^a14^a15^a16^a17^a18^a19^a20; //^a21^a22^a23^a24; //^a25^a26^a27^a28^a29^a30^a31^a32;

  if(a==0){
    printf("not code\n");
//    exit(1);
    count++;
  printf("trace 0\n");
  if(count>50)
      exit(1);

  return 1;
  }
/*
  print a," "
  for j in 0..15
    b=gf[mlt(mlt(fg[j],fg[j]),fg[j])]^gf[fg[j]]^1^a;
    if(b==0)
     print "j=",j,"\n"
    end
  end
*/

//c=[1^a,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
//c=[1^a,0,0,0,0,0,0,0,0,0,g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15],g[16],g[17],g[18],g[19],g[20],g[21],g[22],g[23],g[24],g[25],g[26],g[27],g[28],g[29],g[30],g[31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]
//c=[g[0]^a,g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15],1];
//c=[g[0]^a,g[1],g[2],g[3],g[4],g[5],g[6],g[7],g[8],g[9],g[10],g[11],g[12],g[13],g[14],g[15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1];
  c[0]=a;
  for(i=1;i<K;i++)
  c[i]=g[K-i];
  c[K]=1;
d[0]=x;
d[1]=1;
//e=[0,0,0,0,0,1]
  //for(i=0;i<7;i++)
  //r[i]=0;
//#e=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,00,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
//#r=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
e[K-1]=1;


i=K;

  while(i>0){
  r[i]=gf[mlt(fg[d[1]],fg[e[i-1]])];
  r[i-1]=gf[mlt(fg[d[0]],fg[e[i-1]])];
//#print r[i]," r",i," ",r[i-1]," ",e[i-1],"\n"
	j=K;
    while(j>-1){
    c[j]=r[j]^gf[fg[c[j]]];
//    print c[j]," c"
    j=j-1;
    }
//#  print "\n"
  r[i]=c[i];
    if(i-2>-1){
    e[i-2]=c[i-1];
//#    print "e ",e[i-2],"\n"
    }
i=i-1;
  }

//for(i=0;i<K;i++)
//print e[K-1-i]," "
//end
//print "e\n"
//#exit()
//print gf[mlt(fg[e[5]],dv(1,fg[a]))],",",gf[mlt(fg[e[4]],dv(1,fg[a]))],",",gf[mlt(fg[e[3]],dv(1,fg[a]))],",",gf[mlt(fg[e[2]],dv(1,fg[a]))],",",gf[mlt(fg[e[1]],dv(1,fg[a]))],",",gf[mlt(fg[e[0]],dv(1,fg[a]))],"\n"

//#print gf[mlt(fg[e[15]],dv(1,fg[a]))],",",gf[mlt(fg[e[14]],dv(1,fg[a]))],",",gf[mlt(fg[e[13]],dv(1,fg[a]))],",",gf[mlt(fg[e[12]],dv(1,fg[a]))],",",gf[mlt(fg[e[11]],dv(1,fg[a]))],",",gf[mlt(fg[e[10]],dv(1,fg[a]))],",",gf[mlt(fg[e[9]],dv(1,fg[a]))],",",gf[mlt(fg[e[8]],dv(1,fg[a]))],",",gf[mlt(fg[e[7]],dv(1,fg[a]))],",",gf[mlt(fg[e[6]],dv(1,fg[a]))],",",gf[mlt(fg[e[5]],dv(1,fg[a]))],",",gf[mlt(fg[e[4]],dv(1,fg[a]))],",",gf[mlt(fg[e[3]],dv(1,fg[a]))],",",gf[mlt(fg[e[2]],dv(1,fg[a]))],",",gf[mlt(fg[e[1]],dv(1,fg[a]))],",",gf[mlt(fg[e[0]],dv(1,fg[a]))],"\n";
  for(i=0;i<K;i++){
  h3[i][x]=gf[mlt(fg[e[K-1-i]],dv(1,fg[a]))];

  }

//#print x," "
}

//#exit()
for(i=0;i<K;i++){
  for(j=0;j<N;j++){
    printf("%d,",h3[i][j]);
  }
  printf("\n");
}

return 0;

}




int genky(void){
  int i,j,f;
  FILE *fq,*fp;
 char fin[80],fout[80],buf1[K],buf3[K],*c,s[256],t[256],tt[256];
	 unsigned char ss[256],m[K],o,buf4[K],p;
  int line=0,k=0,n=0,read_size,l,ll;
  unsigned long long int z,zz,W1,W2,W3,W4;
  float start;
  short bc;
  char *a;

  on C;
  const char *buf2[32];



  for(i=0;i<256;i++){
    s[i]=0;
    t[i]=0;
    ss[i]=0;
    tt[i]=0;
  }

//  printf("256-bit mode\n");
  buf2[32]="--------------------256-Encrypt";
  fp=fopen("key.bin","rb");
  if(fp==NULL){
    fq=fopen("key.bin","wb");
    printf("�F�؎q�𐶐����܂��B�p�X���[�h�����͂��Ă��������B\n");
//    fgets(t,sizeof(t),stdin);
	seed();
    hasha((unsigned char *)password);
    printf("���������܂��B�����_���ɃL�[�{�[�h���ł��Ă��������B");
	seed();
    hasha((unsigned char *)password);
    l=lk2();

    if(l==0){
      g64(256);
      fwrite(c1.m,1,16,fq);
      fwrite(c2.m,1,16,fq);
      printf("That's true!\n");
      return 0;
      }
    j=0;
    while(l==1){
//      exit(1);
      hasha((unsigned char *)password);

      for(i=0;i<16;i++){
        s[i]=c1.m[i];
        s[i+16]=c2.m[i];
      }

      for(i=0;i<16;i++)
        printf("%u ",s[i]);
      printf("\n");

      hasha((unsigned char *)s);
      j++;
      printf("j=%d\n",j);
      if(j>50){
        printf("�����l���ςł��B���������������x���蒼���Ă��������B");
        if(l==1){
          printf("�������Ɏ��s���܂���\n");
          return 1;
        }
      }
      printf("ll%u\n",l);
//    genkey(s,t);
      l=lk2();
      if(l==0){
        g64(256);
        fwrite(c1.m,1,16,fq);
        fwrite(c2.m,1,16,fq);
        printf("That's true!\n");
       return 0;
      }
//      l=1;ll=1;

    //kk();
    if(l==0){
      printf("%u\n",l);
      printf("l�����������܂���\n");
      return 0;;
    }
        fwrite(c1.m,1,16,fq);
        fwrite(c2.m,1,16,fq);
    fclose(fq);

return 0;
    }
    /*
    printf("���������܂��B�����_���ɃL�[�{�[�h���ł��Ă��������B");
	seed();
	//scanf("%s",&s);
    hasha((unsigned char *)password);
//    exit(1);
	l=1;
    l=lk2();
	printf("l=%d\n",l);
//    ll=lk2();
    if(l==0){
      g64(256);
      fwrite(c1.m,1,16,fq);
//      fwrite(c2.m,1,16,fq);
      printf("That's true!\n");
      }
    j=0;
    while(l==1){
//      exit(1);
//        hasha(dd1.m);
//seed();

      for(i=0;i<16;i++){
        s[i]=c1.m[i];
        s[i+16]=c2.m[i];
      }

//      for(i=0;i<16;i++)
  //      printf("%u ",c2.m[i]);
    //  printf("\n");
      hasha((unsigned char *)s);
      j++;
      printf("j=%d\n",j);
      if(j>50){
        printf("�����l���ςł��B���������������x���蒼���Ă��������B");
        if(l==1){
          printf("�������Ɏ��s���܂���\n");
          exit(1);
        }
      }
	  l=1;
	  l=lk2();

	  printf("ll%u\n",l);
//    genkey(s,t);
	  printf("a%d ",l);
      if(l==0){
        g64(256);
        fwrite(c2.m,1,16,fq);
  //      fwrite(c2.m,1,16,fq);
        printf("That's true!\n");
        break;
      }
//      l=1;ll=1;

	}
	l=1;
    l=lk2();
    if(l==0){
      printf("!%u\n",l);
      printf("l�����������܂���\n");
	}
	l=lk2();
	if(l==1){
	printf("ee!?\n");
	exit(1);
	}
    fclose(fq);
    exit(1);
  }
      */
  }
  if(fp!=NULL)
    fclose(fp);

}


unsigned char sn1[K]={0},sn2[K]={0};

void syn(){
  int i,j,k,count=0,y[255]={0},s[2][36]={0},H[36][255]={0},ll,aa,cc,l,x,a[N]={0};

  time_t timer;
  FILE *fp;

  srand(time(&timer));
/*
  srand(time(&timer));
  while(count<K/2){
    aa=rand()%256;
    cc=rand()%16;
    if(a[aa]==0 && cc>0){
      a[aa]=cc;
    count++;
    }
  }
*/

  for(i=0;i<K/2;i++)
    a[i]=1+i;

    genky();


//  time_t timer;
  unsigned char xx[200]={0},b[K]={0,0,0},bb[3]={0,0,0},c[K]={0};
  unsigned char va[K+2][K+2]={0},p[200][200]={0},ga[K+1];
  int rd;


  va[0][0]=0;
  va[1][0]=1;

  /*
    for(j=0;j<K;j++){
      H[j][N-2]=1;
      H[j][N-3]=gf[j+2];
    }


  for(j=0;j<K;j++){
    for(i=0;i<N-2;i++)
      H[j][i]=gf[mltn(N-2-i,fg[H[j][N-3]])];
    }
  */


  FILE *fo,*fh;
  fo=fopen("3","rb");
  fh=fopen("3.g","wb");

  l=lk2();
   while(l==1){
     if(count>50)
       exit(1);
     l=lk2();
     count++;
   }
//  exit(1);
  fread(c,1,K,fo);
//  for(i=0;i<K+1;i++)
//    ga[K-i]=g[i];

//  for(i=0;i<K+1;i++)
//    g[i]=ga[i];

/*
  for(j=0;j<K;j++){
    for(i=0;i<16;i++){
      sn1[j]^=gf[mlt(fg[h3[i][j]],fg[f[i]])];
  }
  printf("%d,",sn1[j]);
}
printf("\n");
exit(1);
*/
/*
for(i=0;i<K;i++){
  for(j=0;j<16;j++){
    h3[i][j]^=f[j];
  }
}
*/

//  j=N-1;
  for(i=0;i<K;i++){
    for(j=0;j<N;j++){
      if(a[j]>0){
      sn1[i]^=gf[mlt(fg[h3[i][j]],fg[a[j]])];
      sn2[i]^=gf[mlt(fg[h1[i][j]],fg[a[j]])];
      }
    }
    printf("%d ",sn2[i]);
    sn2[i]^=c[i];
  }
    fwrite(sn1,1,K,fh);
    fwrite(sn2,1,K,fh);
fclose(fh);
fclose(fo);
}


void hamm(){
  int i,j,k;
  unsigned char H[7][3]={
  {0,1,1},
  {1,1,0},
  {1,1,1},
  {1,0,1},
  {0,0,1},
  {0,1,0},
  {1,0,0}
};
  unsigned char G[4][7]={
    {1,0,0,0,1,1,0},
    {0,1,0,0,0,1,1},
    {0,0,1,0,1,1,1},
    {0,0,0,1,1,0,1}};
    unsigned char Z[4][7]={
      {1,0,0,0,0,0,0},
      {0,1,0,0,0,0,0},
      {0,0,1,0,0,0,0},
      {0,0,0,1,0,0,0}
    };

unsigned char s[4]={0},ss[4]={0},z[7]={0},zz[7];
unsigned char r[4]={1,0,0,1};
unsigned char c[7]={0};
unsigned char e1[7]={1,0,0,0,0,0,0},e2[7]={0,0,0,0,0,0,1},e3[7]={0,0,0,1,0,0,0};

unsigned char cc[7]={0};

  for(j=0;j<7;j++){
  cc[j]=G[0][j]^G[3][j];
printf("%d",cc[j]);
}
printf("=c\n");

k=0;
  for(i=0;i<4;i++){
  for(j=0;j<7;j++)
  G[i][j]=G[i][j]^Z[i][j];
//  printf("%d",G[][]);
}
//printf("\n");
k=0;

  for(i=0;i<7;i++){
  z[i]=Z[0][i]^Z[3][i];
printf("%d",z[i]);
}
printf("=z\n");

  for(j=0;j<3;j++){
    k=0;
  for(i=0;i<7;i++)
  k^=z[i]&H[i][j];
  ss[j]=k;
  printf("%d",k);
}
printf("=zH\n");

  for(j=0;j<7;j++){
  c[j]=G[0][j]^G[3][j];
  printf("%d",c[j]);
}
printf("=z^c\n");

for(i=0;i<7;i++){
c[i]^=e2[i];
printf("%d",c[i]);
}
printf("=z^c^e\n");

for(i=0;i<3;i++){
  k=0;
for(j=0;j<7;j++)
k^=c[j]&H[j][i];
s[i]=k;
printf("%d",k);
}
printf("=cH\n");

for(i=0;i<3;i++){
s[i]^=ss[i];
printf("%d",s[i]);
}
printf("=s^ss\n");

for(i=0;i<3;i++){
k=0;
  for(j=0;j<7;j++)
  k^=e2[j]&H[j][i];
  printf("%d",k);
}
printf("=eH\n");


for(i=0;i<7;i++)
printf("%d",cc[i]);
printf("\n");

for(i=0;i<3;i++){
  k=0;
  for(j=0;j<7;j++)
  k^=cc[j]&H[j][i];
  printf("%d",k);
}
printf("\n");
exit(1);




}


int ll[64][64],xa[K][K*2];
#define NN K

void gausu(unsigned char ax[K][K]){
int i,j,k,pivot,mul,n;
// 対角成分が1で正規化された階段行列を作る
for(i=0;i<K;i++){
for(j=0;j<K;j++){
xa[i][j]=ax[i][j];
printf("a%d,",xa[i][j]);
}
printf("\n");
}
//exit(1);

for(i=0;i<K;i++){
for(j=K;j<K*2;j++){
if(i==(j-K))
xa[i][j]=1;
else xa[i][j]=0;
}
}

for (i = 0; i < NN; ++i)
{
    // 対角成分の選択、この値で行成分を正規化
    pivot = xa[i][i];
    for (j = 0; j < NN * 2; ++j)
    {
        xa[i][j] = gf[mlt(fg[Inv(pivot)] , fg[xa[i][j]])];
    }

    // 階段行列を作る為に、現在の行より下の行につ
    // i列目の成分が0になるような基本変形をする
    for (k = i + 1; k < NN; ++k)
    {
        mul = xa[k][i];
        for (n = i; n < NN * 2; ++n)
        {
            xa[k][n] = xa[k][n] ^  gf[mlt(fg[mul] , fg[xa[i][n]])];
        }
    }

}

// 下から上に向かって変数に代入して、左側について
for (i = NN - 1; i > 0; --i)
{
    for (k = i - 1; k >= 0; --k)
    {
        mul = xa[k][i];
        for (n = i; n < NN * 2; ++n)
        {
            xa[k][n] = xa[k][n] ^ gf[mlt(fg[mul] , fg[xa[i][n]])];
        }
    }
}

}





void h2g(unsigned char h3[K][N]){
  int i,j,k;
  unsigned char g2[K][K],tmp[K][N]={0},G[N-K][N]={0};

  for(i=N-K;i<N;i++){
    for(j=0;j<K;j++){
  g2[j][i+K-N]=h3[j][i];
  printf("%d,",g2[j][i+K]-N);
    }
    printf("\n");
  }
  gausu(g2);
  for(i=0;i<K;i++){
    for(j=K;j<K*2;j++)
    printf("%d,",xa[i][j]);
    printf("\n");
  }
//  exit(1);
printf("oifdjg@oi");
int aa;
for(i=0;i<K;i++){
for(k=K;k<K*2;k++){
aa=0;
for(j=0;j<K;j++)
aa^=gf[mlt(fg[g2[i][j]],fg[xa[j][k]])];
printf("%d,",aa);
}
printf("%d,",i);
printf("\n");
}
printf("riuhpiu");
for(i=0;i<K;i++){
for(j=0;j<K;j++){
  for(k=0;k<N;k++)
  tmp[i][k]^=gf[mlt(fg[xa[i][j+K]],fg[h3[j][k]])];
}
}

for(i=0;i<N-K;i++){
  for(j=0;j<N-K;j++){
    if(i==j)
      G[i][j]=1;
}
}
printf("wrehepo");

for(i=N-K;i<N;i++){
  for(j=0;j<N-K;j++){
  G[j][i]=tmp[i+K-N][j];
  printf("%d,",G[j][i]);
}
printf("\n");
}
printf("\n");
  for(j=0;j<K;j++){
    aa=0;
    for(k=0;k<K;k++){
      for(i=0;i<N;i++){
        aa^=gf[mlt(fg[G[j][i]],fg[tmp[k][i]])];
      }
      printf("%d,",aa);
  }
  printf("\n");
}
for(i=0;i<N-K;i++){
  for(j=0;j<N;j++){
    printf("%d,",G[i][j]);
  }
  printf("\n");
}
//exit(1);


//for(j=0;j<N;j++)
//  G[0][j]^=j+1;

unsigned char c[K]={0};
for(j=0;j<K;j++){
  for(i=0;i<N;i++){
    c[j]^=gf[mlt(fg[G[0][i]],fg[tmp[j][i]])];
  }
}

for(i=0;i<K;i++)
printf("%d,",c[i]);
printf("\n");


}

void rc(){
  int i,j,k;
  unsigned char r[K][N]={0},ga[K][K]={0};
  time_t t;

  srand(time(&t));
  for(i=0;i<K;i++){
    for(j=0;j<N;j++)
      r[i][j]=rand()%256;
  }
  for(i=K+1;i<N;i++){
    for(j=0;j<K;j++)
      ga[j][i]=r[j][i];
}
  gausu(ga);
  for(i=0;i<K;i++){
    for(j=K+1;j<N;j++)
      printf("%d,",xa[i][j]);
    printf("\n");
  }


}

void decode(unsigned char s[K],unsigned char g[K+1]){
  int i,j,k,l,ll,oo,lll=0;
  unsigned long cc,a,x,count=1;
  unsigned char coef[6]={13,11,8,7,12,4};
  unsigned char xx[K/2],b[K]={0},bb[K]={0},c[K]={0};
  unsigned char va[K+2][K+2]={0},p[K*2][K*2][K*2]={0},w[K+1]={0},m[K];
  time_t timer;
  FILE *fp,*fq;
  int r[K+1]={0},ti;


  va[0][0]=0;
  va[1][0]=1;


//g[32]=1;
//  syn();
//  system("pause");
//  exit(1);
  fq=fopen("3.log","wb");
fp=fopen("3.g","rb");
  if(fp==NULL)
    printf("baka\n");
    printf("ti=%llu\n",ti);
//  fread(s,1,K,fp);
//  fread(m,1,K,fp);
  //  lk();

//  oo=1000000;
//  k=lk2();
//  while(k==1){
//  k=lk2();
//  }
//  for(i=0;i<K;i++)
//    g[i]=FF[i];


lk2();
for(i=0;i<K+1;i++)
printf("%d,",g[i]);
printf("\n");
//exit(1);



//  while(oo>-1){


  for(j=0;j<K;j++){
//    s[j]=ss[j];
    printf("%d ", s[j]);
  }

printf("s\n");
printf("!\n");
//exit(1);

for(k=0;k<K/2;k++){

  for(j=0;j<N;j++){
    if(g[j]>0)
      l=j;
    if(s[j]>0)
      ll=j;
  }
// count=0;

  for(cc=0;cc<2;cc++){
    for(i=0;i<N;i++){
      if(gf[mlt(i,fg[s[0]])]==g[0]){
        if(i==0 && cc==0){
          for(j=0;j<K+1;j++){
          r[j]=g[j+1];
          g[j]=s[j];
          s[j]=r[j];
          r[j]=0;
          }
          for(j=0;j<N;j++){
            if(gf[mlt(i,fg[s[0]])]==g[0])
              a=i;
          }
        }else{
        a=i;
        break;
        }
      }
    }
    printf("gf%d\n",gf[a]);
    q[k][cc]=gf[a];
//        printf("\n");
//    for(i=0;i<K+1;i++)
//      printf("g%d ",g[i]);
//    printf("\n");
    for(j=0;j<K+1;j++){
      r[j]=gf[mlt(fg[s[j]],a)];
 //     printf("%dr ,",r[j]);
      g[j]=r[j]^g[j];
    }
 //   printf("\n");
  //  for(i=0;i<K+1;i++)
 //     printf("g%d ",g[i]);
 //   printf("\n");

     if(cc==1)
        count++;
    //system("pause");
    if(count<K/2+2){
    for(j=0;j<K+1;j++){
      if(j<K){
        g[j]=g[j+1];
        w[j]=g[j];
      }
    if(j==K)
      g[j]=0;
      }
    }
  }
  for(j=0;j<K+1;j++){
    r[j]=s[j];
//    printf("s%d ",s[j]);
  }
  printf("\n");
  for(j=0;j<K+1;j++)
    s[j]=g[j];
  for(j=0;j<K+1;j++)
    g[j]=r[j];

//system("pause");
}
count=0;

for(i=0;i<K/2;i++){
  for(j=0;j<1;j++){
    a=q[i][j+1];
    q[i][j+1]=q[i][j];
    q[i][j]=a;
  }
}

for(i=0;i<K/2+1;i++)
printf("q %d , %d\n",q[i][0],q[i][1]);


for(i=0;i<2;i++)
va[2][i]=va[0][0]^gf[mlt(fg[q[0][i]],fg[va[1][0]])];

for(i=0;i<2;i++)
printf(" %d, ",va[2][i]);
printf("\n");
for(i=0;i<2;i++)
printf("%d , %d\n",q[1][i],va[2][i]);

//#exit()
for(count=1;count<2;count++){
  for(l=count-1;l<count;l++){
    for(i=0;i<2;i++){
      for(j=0;j<l+2;j++){
        va[count+2][i+j]^=gf[mlt(fg[q[count][i]],fg[va[count+1][j]])];
      }
    }
    va[count+2][l]=va[count+2][l]^va[count][l];
  }
  printf("0=%d\n",va[count][0]);
}

//va[count+1][0]=0;
for(i=0;i<3;i++)
printf("v%d ",va[3][i]);
//#exit()
printf("\n");



for(count=2;count<K/2+1;count++){

    for(i=0;i<2;i++){
      for(j=0;j<count+1;j++){
        va[count+2][i+j]^=gf[mlt(fg[q[count][i]],fg[va[count+1][j]])];
      }
    }
    for(l=0;l<count+1;l++){
    va[count+2][l]=va[count+2][l]^va[count][l];
      printf("%d ",va[count+2][l]);
  }
printf("\n");
}

/*
for(count=16;count<K/2+1;count++){
    for(i=0;i<2;i++){
      for(j=0;j<count+1;j++){
        va[count+2][i+j]^=gf[mlt(fg[q[count][i]],fg[va[count+1][j]])];
      }
    }
    for(l=0;l<count+1;l++){
    va[count+2][l]=va[count+2][l]^va[count][l];
        printf("%d ",va[count+2][l]);
  }
printf("\n");
}
*/
//v5[0]=0;
//v5[1]=4;v5[2]=6;v5[3]=2;
for(i=0;i<K/2+1;i++)
printf(" %dv ",va[K/2+1][i]);
printf("\n");
//#exit()

int ttt=0;
a=0;j=0;
     for(x=0;x<N;x++){
       a=va[K/2+1][0]^gf[mlt(fg[va[K/2+1][1]],fg[x])];
       for(i=2;i<K/2+1;i++)
       a^=gf[mlt(fg[va[K/2+1][i]],mltn(i,fg[x]))];

        // ^gf[mlt(fg[va[K/2+1][3]],mltn(3,fg[x]))]^gf[mlt(fg[va[K/2+1][4]],mltn(4,fg[x]))]^gf[mlt(fg[va[K/2+1][5]],mltn(5,fg[x]))]; //^gf[mlt(fg[va[19][6]],mltn(6,fg[x]))]^gf[mlt(fg[va[19][7]],mltn(7,fg[x]))]^gf[mlt(fg[va[19][8]],mltn(8,fg[x]))]^gf[mlt(fg[va[19][9]],mltn(9,fg[x]))]^gf[mlt(fg[va[19][10]],mltn(10,fg[x]))]^gf[mlt(fg[va[19][11]],mltn(11,fg[x]))]^gf[mlt(fg[va[19][12]],mltn(12,fg[x]))]^gf[mlt(fg[va[19][13]],mltn(13,fg[x]))]^gf[mlt(fg[va[19][14]],mltn(14,fg[x]))]^gf[mlt(fg[va[19][15]],mltn(15,fg[x]))]^gf[mlt(fg[va[19][16]],mltn(16,fg[x]))]^gf[mlt(fg[va[19][17]],mltn(17,fg[x]))]^gf[mlt(fg[va[19][18]],mltn(18,fg[x]))];
       //#printf(" a,"\n"

       if(a==0){
         ttt++;
//         for(k=0;k<N;k++){
//           if(x==gf[mltn(k,2)])
//             printf("x=%d\n",(N-1)^k);
//         }
         printf("x=%d\n",x);
         xx[j]=x;
         j=j+1;
       }
     }

for(i=0;i<K/2;i++){
  q[i][0]=fg[xx[i]];
  q[i][1]=1;
  printf("%d ",xx[i]);
}
printf("\n");
//system("pause");
//exit(1);


unsigned char qu[200]={0};
unsigned char qq[200][200]={0};
unsigned int n;

for(l=0;l<K/2;l++){

  p[l][0][0]=1;
  p[l][0][1]=0;

  if(l>0){
    for(i=0;i<l;i++){
      for(k=0;k<2;k++){
        qq[i+1][k]=q[i][k];
      printf("%d ",q[i][k]);
      }
      printf("\n");
    }
  }
  if(l==0){
    for(i=1;i<K/2+1;i++){
      for(k=0;k<2;k++)
      qq[i][k]=q[i][k];
    }
  }

  if(l>1){
  for(i=l+1;i<K/2+1;i++){
    for(k=0;k<2;k++)
      qq[i][k]=q[i][k];
  }
  }

  n=1;
  for(i=0;i<K/2+1;i++){
    if(n<K/2+1){
      for(k=1;k>-1;k--){
        for(j=0;j<i+2;j++){
          p[l][i+1][k+j]^=gf[mlt(fg[p[l][i][j]],qq[n][k])];
        }
      }
    }
    n++;
  }


  for(i=0;i<K/2;i++){
printf("%d ",p[l][K/2-1][i]);
    qu[i]^=p[l][K/2-1][i];
  }
printf(" a\n");
}

for(i=0;i<K/2;i++){
qu[i]=gf[mlt(fg[qu[i]],fg[va[K/2+1][K/2]])];
printf("%d ",qu[i]);
}
printf("\n");

//system("pause");




  for(j=0;j<K/2;j++){
    bb[j]=qu[(K/2-1)-j];
  }


for(i=0;i<K/2;i++)
printf(" %u ",bb[i]);
printf("p3\n");
for(i=0;i<K/2;i++){
  s[i]=w[i];
printf(" %d ",s[i]);
}
printf("w\n");
//for(i=0;i<K/2;i++)
//printf(" %d ",bb[i]);
//printf("\n");


int tt=0;

for(i=0;i<K/2;i++){
  c[i]=s[K/2-1]^gf[mlt(fg[s[K/2-2]],fg[xx[i]])];
  for(j=2;j<K/2+1;j++)
    c[i]^=gf[mlt(fg[s[K/2-1-j]],mltn(j,fg[xx[i]]))];
  // ^gf[mlt(fg[s[2]],mltn(3,fg[xx[i]]))]^gf[mlt(fg[s[1]],mltn(4,fg[xx[i]]))]^gf[mlt(fg[s[0]],mltn(5,fg[xx[i]]))]; //^gf[mlt(fg[s[13]],mltn(6,fg[xx[i]]))]^gf[mlt(fg[s[12]],mltn(7,fg[xx[i]]))]^gf[mlt(fg[s[11]],mltn(8,fg[xx[i]]))]^gf[mlt(fg[s[10]],mltn(9,fg[xx[i]]))]^gf[mlt(fg[s[9]],mltn(10,fg[xx[i]]))]^gf[mlt(fg[s[8]],mltn(11,fg[xx[i]]))]^gf[mlt(fg[s[7]],mltn(12,fg[xx[i]]))]^gf[mlt(fg[s[6]],mltn(13,fg[xx[i]]))]^gf[mlt(fg[s[5]],mltn(14,fg[xx[i]]))]^gf[mlt(fg[s[4]],mltn(15,fg[xx[i]]))]^gf[mlt(fg[s[3]],mltn(16,fg[xx[i]]))]^gf[mlt(fg[s[2]],mltn(17,fg[xx[i]]))]^gf[mlt(fg[s[1]],mltn(18,fg[xx[i]]))]^gf[mlt(fg[s[0]],mltn(19,fg[xx[i]]))];
  b[i]=bb[K/2-1]^gf[mlt(fg[bb[K/2-2]],fg[xx[i]])];
  for(k=2;k<K/2+1;k++)
  b[i]^=gf[mlt(fg[bb[K/2-1-k]],mltn(k,fg[xx[i]]))];
  printf("bb=%d\n",b[i]);
if(b[i]>0)
tt++;
      //^gf[mlt(fg[bb[2]],mltn(3,fg[xx[i]]))]^gf[mlt(fg[bb[1]],mltn(4,fg[xx[i]]))]^gf[mlt(fg[bb[0]],mltn(5,fg[xx[i]]))]; //^gf[mlt(fg[bb[6]],mltn(5,fg[xx[i]]))]; //^gf[mlt(fg[bb[10]],mltn(6,fg[xx[i]]))]^gf[mlt(fg[bb[9]],mltn(7,fg[xx[i]]))]^gf[mlt(fg[bb[8]],mltn(8,fg[xx[i]]))]^gf[mlt(fg[bb[7]],mltn(9,fg[xx[i]]))]^gf[mlt(fg[bb[6]],mltn(10,fg[xx[i]]))]^gf[mlt(fg[bb[5]],mltn(11,fg[xx[i]]))]^gf[mlt(fg[bb[4]],mltn(12,fg[xx[i]]))]^gf[mlt(fg[bb[3]],mltn(13,fg[xx[i]]))]^gf[mlt(fg[bb[2]],mltn(14,fg[xx[i]]))]^gf[mlt(fg[bb[1]],mltn(15,fg[xx[i]]))]^gf[mlt(fg[bb[0]],mltn(16,fg[xx[i]]))]; //^gf[mlt(fg[bb[0]],mltn(17,fg[xx[i]]))];
}

for(i=0;i<K/2;i++){
c[i]=gf[dv(fg[c[i]],fg[b[i]])];
printf("%d %d\n",c[i],xx[i]);
}
if(tt==10 && ttt==10){
  lll++;
printf("ti=%d\n",ti);
//if(lll>1)
exit(1);
}
//} //while(<65536)

//printf("\n");
for(i=0;i<K;i++)
b[i]=0;
for(i=0;i<K;i++){
  for(j=0;j<K/2;j++)
    b[i]^=gf[mlt(fg[h1[i][xx[j]]],fg[c[j]])];
  printf("b%d ",b[i]);
  m[i]=m[i]^b[i];
}
//fwrite(m,1,K,fq);
printf("lll=%d\n",lll);


//  return 0;


}


int chkmat(unsigned char g[K][K]){
int c=0,i,j,k;

  for(i=0;i<K;i++){
    for(j=0;j<K;j++){
      if(i==j){
        if(g[i][j]==1)
        c++;
      } else {
        if(g[i][j]==0){
          c++;
        }
      }
    }
  }
  if(c==K*K){
  return 0;
} else {
  return -1;
}

}



void grc(void){
  int i,j,k,c=-1;
  unsigned char g2[K][K]={0},G[K][N]={0};

while(c == -1){
  for(i=0;i<K;i++){
    for(j=0;j<N;j++){
  G3[i][j]=rand()%2;
  printf("%d,",G3[i][j]);
  }
  printf("\n");
  }


  for(i=N-K;i<N;i++){
    for(j=0;j<K;j++){
      g2[j][i+K-N]=G3[j][i];
  printf("%d,",g2[j][i+K-N]);
    }
    printf("\n");
  }

  gausu(g2);

  for(i=0;i<K;i++){
    for(j=N-K;j<N;j++){
  //for(j=0;j<K;j++)
    printf("%d,",xa[i][j]);
  }
    printf("\n");
  }
  //  exit(1);

  int aa;
  unsigned char chk[K][K]={0};
  for(i=0;i<K;i++){
  for(k=N-K;k<N;k++){
  aa=0;
  for(j=0;j<K;j++)
  chk[i][k-N+K]^=gf[mlt(fg[g2[i][j]],fg[xa[j][k]])];
  printf("%d,",chk[i][k-N+K]);

  }
  printf("\n");
  }
  c=chkmat(chk);
}
//  exit(1);


  for(i=0;i<K;i++){
  for(k=0;k<N;k++){
  for(j=0;j<K;j++){
  tmp[i][k]^=gf[mlt(fg[xa[i][j+K]],fg[G3[j][k]])];
  }
  printf("%d,",tmp[i][k]);
  }
  printf("\n");
  }
//  exit(1);

  for(i=0;i<N-K;i++){
  for(j=0;j<N-K;j++){
    if(i==j)
      FG[i][j]=1;
  }
  }

  for(i=N-K;i<N;i++){
  for(j=0;j<N-K;j++){
    FG[j][i]=tmp[i+K-N][j];
  }
  }
  for(i=0;i<K;i++){
    for(j=0;j<N;j++)
    printf("%d,",FG[i][j]);
    printf("\n");
  }
  int aa=0;
  for(i=0;i<K;i++){
    for(j=0;j<K;j++){
      for(k=0;k<N;k++)
      aa^=gf[mlt(fg[FG[i][k]],fg[G3[j][k]])];
      printf("%d,",aa);
    }
    printf("\n");
  }


}



int main(void){

  int i,j,k,l,ll,oo,lll=0,aa=0;
  unsigned long cc,a,x,count=1;
  unsigned char coef[6]={13,11,8,7,12,4};
  unsigned char xx[200]={0},b[K]={0},bb[K]={0},c[K]={0};
  unsigned char va[K+2][K+2]={0},p[200][200][200]={0},w[K+1]={0},m[K];
  time_t timer;
  FILE *fp,*fq;
  int r[K+1]={0};
  unsigned char g[K+1]={1,0,0,0,1,0,1}; //{1,5,0,1,7,3,15}; //={1,2,9,4,0,6,4};
  unsigned char g2[K+1]={1,0,9,0,0,6,4};
	unsigned char Z[8][16]={
		{1,0,2,0,3,0,4,0,0,0,0,0,0,0,0,0},
		{0,0,2,0,0,0,0,0,5,0,6,0,7,0,8,0},
		{0,0,0,0,3,0,4,0,5,0,6,0,0,0,0,0},
		{0,0,0,0,0,0,4,0,5,0,6,0,7,0,8,0},
		{1,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0},
		{0,0,2,0,3,0,0,0,0,0,6,0,0,0,8,0},
		{1,0,2,0,0,0,0,0,0,0,6,0,7,0,0,0},
		{0,0,2,0,3,0,4,0,5,0,0,0,0,0,0,0}
	};
	unsigned char m[8]={1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,4};
  unsigned char ww[6][16]={
    /*
    {8,14,7,5,3,11,11,4,9,13,1,0,0,0,0,0},
    {6,14,13,1,9,14,6,9,6,3,0,1,0,0,0,0},
    {14,13,13,2,13,2,8,4,3,14,0,0,1,0,0,0},
    {12,13,2,4,6,11,13,1,14,8,0,0,0,1,0,0},
    {3,12,8,5,4,6,14,2,12,14,0,0,0,0,1,0},
    {11,8,3,3,6,12,6,14,13,14,0,0,0,0,0,1}
    */


    
{1,1,11,14,10,2,6,7,4,11,10,11,12,13,10,9},
{0,1,15,11,3,10,13,12,11,5,11,10,6,7,8,10},
{0,1,7,4,12,9,5,15,14,6,1,1,3,8,13,2},
{0,1,14,12,2,6,7,6,13,4,10,11,13,12,9,7},
{1,0,14,3,2,5,13,12,8,4,1,1,6,7,9,15},
{0,0,5,5,8,8,5,15,15,15,10,11,3,8,3,3}

  };
  unsigned char w2[6][16]={
{3,10,12,9,13,13,10,14,15,3,15,6,13,14,1,8},
{3,0,13,11,11,6,4,15,10,1,13,14,7,7,15,13},
{1,6,7,3,11,11,7,11,3,8,10,4,3,5,4,11},
{5,1,3,7,9,2,12,8,9,2,3,13,3,0,9,12},
{12,2,4,6,9,12,0,0,9,7,9,3,11,10,7,0},
{13,7,14,2,5,4,5,7,12,0,7,7,3,8,13,4}
  };


  unsigned char gg[16][10]={
    {1,0,0,0,0,0,0,0,0,0},
    {0,1,0,0,0,0,0,0,0,0},
    {0,0,1,0,0,0,0,0,0,0},
    {0,0,0,1,0,0,0,0,0,0},
    {0,0,0,0,1,0,0,0,0,0},
    {0,0,0,0,0,1,0,0,0,0},
    {0,0,0,0,0,0,1,0,0,0},
    {0,0,0,0,0,0,0,1,0,0},
    {0,0,0,0,0,0,0,0,1,0},
    {0,0,0,0,0,0,0,0,0,1},
    {8,14,7,5,3,11,11,4,9,13},
    {6,14,13,1,9,14,6,9,6,3},
    {14,13,13,2,13,2,8,4,3,14},
    {12,13,2,4,6,11,13,1,14,8},
    {3,12,8,5,4,6,14,2,12,14},
    {11,8,3,3,6,12,6,14,13,14}
  };
  /*
        {8,14,7,5,3,11,11,4,9,13},
    {6,14,13,1,9,14,6,9,6,3},
    {14,13,13,2,13,2,8,4,3,14},
    {12,13,2,4,6,11,13,1,14,8},
    {3,12,8,5,4,6,14,2,12,14},
    {11,8,3,3,6,12,6,14,13,14}
    ;
    */
unsigned char z[16][10]={
{0,0,9,11,0,8,0,0,0,0},
{15,0,1,14,9,10,0,0,10,11},
{0,0,13,15,0,0,0,0,0,0},
{0,15,0,0,0,5,0,0,0,0},
{0,0,1,12,0,13,1,0,0,0},
{0,13,0,0,8,0,4,0,0,12},
{9,0,0,15,0,0,0,0,0,0},
{13,8,0,0,0,0,0,5,0,0},
{0,3,0,0,0,0,0,0,2,0},
{0,0,0,0,0,15,12,10,0,0},
{11,6,0,12,0,0,0,0,0,5},
{3,0,4,12,10,0,0,0,0,0},
{2,0,0,0,11,0,0,0,0,3},
{0,7,12,0,0,0,0,0,0,0},
{0,4,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,3,0}
};
unsigned char ee[10]={1,2,3,4,5,6,7,8,9,10};
int zz[16]={0};

 unsigned char R[N][N],R1[K][K],E[K][K]={0},G1[K][N],G2[K][N];
int y;

	for(x=0;x<N;x++){
		for(y=0;y<N;y++){
	if((y^3^x^2^gf[mlt(fg[x],fg[y])]^6^gf[mlt(mlt(fg[8],fg[y]),mlt(fg[y],fg[y]))]^gf[mlt(mlt(fg[15],fg[x]),mlt(fg[x],fg[x]))]^gf[mlt(fg[3],fg[x])]^gf[mlt(fg[2],fg[y])]^gf[mlt(fg[5],mlt(fg[x],fg[x]))]^gf[mlt(fg[4],mlt(fg[y],fg[y]))])==0)
	printf("%d,%d\n",x,y);
		}}
	
	exit(1);
	
 for(i=0;i<K;i++){
   for(j=0;j<K;j++){
     R1[i][j]=rand()%2;
     if(i==j)
       E[i][j]=1;
   }
     }
 for(i=0;i<K;i++){
   for(j=0;j<K;j++)
     R[i][j]=R1[i][j];
 }
 for(i=K;i<N;i++){
   for(j=0;j<K;j++)
     R[i][j]=E[i-K][j];
 }
 for(i=K;i<N;i++){
   for(j=K;j<N;j++)
     R[i][j]=E[i-K][j-K];
 }
 for(i=0;i<K;i++){
   for(j=K;j<N;j++)
     R[i][j]=E[i][j-K];
 }

 

for(i=0;i<3;i++)
zz[i]=i+1;

//h2g(w2);
//exit(1);


//for(i=0;i<1;i++){
  for(j=0;j<16;j++){
//  gz[0][j]^=zz[j];
printf("%d,",gg[j][i]);
}
printf("\n");
//}
unsigned char c3[16]={0};
	/*
//for(i=0;i<N-K;i++){
  for(j=0;j<N;j++)
  c3[j]=z2[0][j]^ff[0][j];
  printf("\n");
//}
*/
unsigned char c4[16]={0};
unsigned char s1[6]={0},s2[6]={0},s[6]={0};

for(i=0;i<16;i++){
c4[i]=gg[i][0]^zz[i];
printf("%d,",c4[i]);
}
printf("\n");

for(j=0;j<6;j++){
for(i=0;i<16;i++)
s1[j]^=gf[mlt(fg[z[i][0]],fg[ww[j][i]])];
printf("%d,",s1[j]);
}
printf("\n");
	/*
for(j=0;j<6;j++){
for(i=0;i<16;i++)
s2[j]^=gf[mlt(fg[gz[0][i]],fg[ww[j][i]])];
//printf("%d,",s2[j]);
}
printf("\n");
	*/
for(i=0;i<K;i++)
s[i]=s1[i]^s2[i];
decode(s,g);
exit(1);

for(i=0;i<16;i++){
  aa=0;
  for(j=0;j<10;j++)
  aa^=gf[mlt(fg[ee[j]],fg[gg[i][j]])];
  printf("%d,",aa);
}
printf("\n");

printf("\n");

for(i=0;i<16;i++){
  aa=0;
  for(j=0;j<10;j++)
  aa^=gf[mlt(fg[ee[j]],fg[z[i][j]])];
  printf("%d,",aa);
}
printf("\n");
printf("\n");
/*
for(k=0;k<6;k++){
    for(j=0;j<10;j++){
      aa=0;
    for(i=0;i<16;i++)
    aa^=gf[mlt(fg[gg[i][j]],fg[ww[k][i]])];
    printf("%d,",aa);
  }
  printf("\n");
}
*/
//exit(1);

unsigned char c1[16]={7,3,0,4,6,6,0,15,4,10,11,11,14,9,14,2};
//{13,14,7,4,6,6,0,15,4,10,11,11,14,9,14,2};

unsigned char c2[16]={7,3,0,0,3,0,7,7,13,0,12,4,9,3,8,2};

for(i=0;i<6;i++){
  for(j=0;j<16;j++)
  s1[i]^=gf[mlt(fg[zz[j]],fg[ww[i][j]])];
}
/*
for(j=0;j<6;j++){
aa=0;
for(i=0;i<16;i++)
  s1[j]^=gf[mlt(fg[ww[j][i]],fg[c1[i]])];
  printf("%d,",s1[j]);
}
printf("\n");
for(j=0;j<6;j++){
aa=0;
for(i=0;i<16;i++)
  s2[j]^=gf[mlt(fg[ww[j][i]],fg[c2[i]])];
  printf("%d,",s2[j]);
}
printf("\n");
for(i=0;i<6;i++)
s[i]=s1[i]^s2[i];
//exit(1);
*/
decode(s1,g);
//exit(1);
/*
//  gausu(ww);
  for(i=0;i<6;i++){
    for(j=0;j<12;j++)
    printf("%d,",xa[i][j]);
    printf("\n");
  }
//  unsigned char un[]={15,2,14,12,12,3}
  exit(1);
//1001111 12 4 2
//1010010 15 6 3
//1011011 5 15 13
//1100010 14 4 3
//1101000 4 9 7
//1110000 7 5 14
//1110001 6 8 6
//1110110 3 1 10
//1110111 5 8 1
//1111010 3 8 5
//1111011 15 6 3
srand(time(&timer));

unsigned int ti=1,it;
it=0xFFFFFF;
//while(ti<it){
  g[0]=1;
ti++;
//printf("%d\n",ti);
unsigned char s[K]={4,12,7,8,11,13}; //{5,1,7,4,6,15,6,15,11,11,12,13,56,46,17,51,19,6,9,23}; //,49,20,27,10};
*/
/*
j=0;
while(j<1000000){
for(i=1;i<K+1;i++){
g[i]=rand()%N;
decode(s,g);
}
}
exit(1);
*/

//for(j=1;j<K+1;j++)
//g[j]=rand()%N; //(ti>>j-1)%2;

//tr1e();
//hamm();
lk2();
decode(s1,g);
exit(1);

//h2g();
// rc();
// exit(1);

/*
unsigned char g2[K][K]={0},G[K][N]={0};
int abc;


for(i=0;i<K;i++){
  for(j=0;j<N;j++){
printf("%d,",h3[i][j]);
}
printf("\n");
}

unsigned char C[K][N]={0};
grc();
for(i=0;i<K;i++){
  for(j=0;j<N;j++){
    C[i][j]=tmp[i][j];
  }
}
//exit(1);


for(i=0;i<K;i++){
  for(j=0;j<K;j++)
  g2[i][j]=0;
}
for(i=0;i<K;i++){
  for(j=0;j<N;j++)
  tmp[i][j]=0;
}
for(i=N-K;i<N;i++){
  for(j=0;j<K;j++){
g2[j][i+K-N]=h3[j][i];
printf("%d,",g2[j][i+K-N]);
  }
  printf("\n");
}

gausu(g2);

for(i=0;i<K;i++){
  for(j=N-K;j<N;j++){
//for(j=0;j<K;j++)
  printf("%d,",xa[i][j]);
}
  printf("\n");
}
//  exit(1);


for(i=0;i<K;i++){
for(k=N-K;k<N;k++){
aa=0;
for(j=0;j<K;j++)
aa^=gf[mlt(fg[g2[i][j]],fg[xa[j][k]])];
printf("%d,",aa);

}
printf("\n");
}
//exit(1);

for(i=0;i<K;i++){
for(k=0;k<N;k++){
for(j=0;j<K;j++){
tmp[i][k]^=gf[mlt(fg[xa[i][j+K]],fg[h3[j][k]])];
}
}
}


for(i=0;i<N-K;i++){
for(j=0;j<N-K;j++){
  if(i==j)
    G[i][j]=1;
}
}

for(i=N-K;i<N;i++){
for(j=0;j<N-K;j++){
  G[j][i]=tmp[i+K-N][j];
  printf("%d,",G[j][i]);
}
printf("\n");
}



for(i=0;i<K;i++){
  for(j=0;j<N;j++){
  G[i][j]^=FG[i][j];
  printf("%d,",FG[i][j]);
}
printf("\n");
}
for(i=0;i<K;i++){
  for(j=0;j<N;j++){
    h3[i][j]^=G3[i][j];
  printf("%d,",G[i][j]);
}
printf("\n");
}

for(i=0;i<K;i++){
  for(j=0;j<N;j++){
  printf("%d,",G3[i][j]);
}
printf("\n");
}
exit(1);


for(j=0;j<K;j++){
  aa=0;
  b[j]=0;
      for(k=0;k<K;k++){
        for(i=0;i<N;i++){
      aa^=gf[mlt(fg[G[j][i]],fg[h3[k][i]])];
    }
    printf("%d,",aa);
}
printf("\n");
}
exit(1);

for(i=0;i<N-K;i++){
for(j=0;j<N;j++){
  printf("%d,",FG[i][j]);
}
printf("\n");
}
// exit(1);
*/
for(i=0;i<K;i++)
s[i]=0;

for(j=0;j<K/2;j++){
b[j]=j+1;
FG[0][j]^=j+1;
}


for(i=0;i<K;i++){
for(j=0;j<N;j++){
  //  if(b[j]>0)
  s[i]^=gf[mlt(fg[h3[i][j]],fg[FG[0][j]])];
}
}

printf("\n");
/*
for(i=0;i<K;i++){
  for(j=0;j<K;j++)
c[i]^=gf[mlt(fg[g2[j][i]],fg[s[j]])];
s[i]=c[i];
}
*/
//exit(1);
printf("a");





	return 0;

}
